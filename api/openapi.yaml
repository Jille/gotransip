openapi: 3.0.0
info:
  title: TransIP API
servers:
- url: https://api.transip.nl/v6
tags:
- description: |-
    Welcome to the TransIP API documentation.

    **SOAP V5 API Documentation (deprecated)**

    If you currently use the SOAP API, you may still access the documentation by [clicking here](https://api.transip.nl/docs/transip.nl/package-Transip.html). However we strong advise to switch to the new REST API because the SOAP API has been deprecated.

    **REST API V6**

    With the new REST API, you can manage all of your products in a RESTful way, this means that for most products we allow simple create, update, delete HTTP requests to manage this part of the TransIP product collection.
    This API provides a number of products or actions on subproducts, which we will call resources, an example of such a resource could be the Vps Backup resource, accessible at the following endpoint:
    https://api.transip.nl/v6/vps/{vpsName}/backups

    Each resource can host a number of differenct actions which are accessable by different [HTTP methods](#header-requests). Every resource action has it's own documentation which you can find via the panel on the left.

    All requests and responses use JSON objects and arrays as data format.

    ## Requests

    Every API call can be made using HTTP request to the resource URL and the desired HTTP method.
    All requests should be made using the HTTPS protocol.

    ### Methods

    Method     | Description
    ---------: | -----------------------------------------------------------------------------------------------------------
    **GET**    | Used for retrieving one or more resources, the response attributes can be used to modify the resource.
    **POST**   | Used for creating new resources, see the documentation for the required and optional attributes.
    **PUT**    | Used for updating a resource with new data, all existing data will be removed.
    **PATCH**  | Used for partially updating a resource or calling a resource action like reverting a backup.
    **DELETE** | Used for deleting resources.

    If a **GET** action specifies request attributes, these could be put behind the URL using the http query syntax like:
    `?tags=test`

    ## Responses

    Every response uses an HTTP status code, indicating the success or failure of your request.

    ### HTTP statuses

    In general, when a request succeeds, a 2xx HTTP status code is returned.

    Code      | Reason       | Description
    --------- | ------------ | ---------------------------------------------------------------------------------------------
    **200**   | OK           | GET request succeeded.
    **201**   | Created      | Resource is created using a POST request. The response contains an empty body.
    **204**   | No content   | PUT, PATCH or DELETE request succeeded. The response contains an empty body.

    In case of an error, the following status codes could be returned.

    Code      | Reason                | Description
    --------- | --------------------- | ------------------------------------------------------------------------------------
    **400**   | Bad Request           | The API version or URL is invalid.
    **401**   | Unauthorized          | There is something wrong with your authentication
    **403**   | Forbidden             | You don't have the necessary permissions to perform an operation.
    **404**   | Not Found             | A resource was not found.
    **405**   | Method Not Allowed    | You're using an HTTP method on a resource which does not support it.
    **406**   | Not Acceptable        | One or more required parameters are missing in the request.
    **408**   | Request Timeout       | The request gets a timeout.
    **409**   | Conflict              | Modification is not permitted at the moment. E.g. when a VPS is locked.
    **422**   | Unprocessable Entity  | The input attributes are invalid, e.g. malformed JSON.
    **429**   | Too Many Request      | The rate limit is exceeded.
    **500**   | Internal Server Error | There is a server error.
    **501**   | Not Implemented       | The endpoint is not implemented.

    ## Links

    GET requests may include additional links that can be used to navigate to related resources or pages.

    ### Pages

    Some of the resources allow pagination on their list requests. These would be GET request without a resource identifier, like `/vps` or `/domains`.

    The default page size is unlimited. On the resources that support pagination, you can override this by setting using the `pageSize` parameter.
    For example: `/vps?pageSize=100`

    When pagination is used, the following links will be shown:

    * **first**: The first page of the result set.

    * **previous**: The previous page of the result set.

    * **next**: The next page of the result set.

    * **last**: The last page of the result set.

    These links will only be set when applicable. E.g. when the current page is the last, no 'next' and 'last' links will be present.

    For example, the links section in a response for the first page could look like this:

    ```json
    {
      "_links": {
        "pages": [
          {
            "rel": "next",
            "link": "https://api.transip.nl/v6/domains?pageSize=25&page=2"
          },
          {
            "rel": "last",
            "link": "https://api.transip.nl/v6/domains?pageSize=25&page=9"
          }
        ]
      }
    }
    ```

    ### Related resources

    Responses of GET requests with an identifier may return additional links to related resources.

    For example, when retrieving info about a domain, the following links will be rendered:

    ```json
    {
      "_links": [
        {
          "rel": "self",
          "link": "https://api.transip.nl/v6/domains/example.com"
        },
        {
          "rel": "branding",
          "link": "https://api.transip.nl/v6/domains/example.com/branding"
        },
        {
          "rel": "contacts",
          "link": "https://api.transip.nl/v6/domains/example.com/contacts"
        },
        {
          "rel": "dns",
          "link": "https://api.transip.nl/v6/domains/example.com/dns"
        },
        {
          "rel": "nameservers",
          "link": "https://api.transip.nl/v6/domains/example.com/nameservers"
        },
        {
          "rel": "actions",
          "link": "https://api.transip.nl/v6/domains/example.com/actions"
        }
      ]
    }
    ```

    ## Authentication

    In order to authenticate a request we make use of access tokens.
    These access tokens make use of the <a href="https://jwt.io" target="_blank">JSON Web Token</a> standard.

    To get an access token, you should first generate a key pair using the
    <a href="https://www.transip.nl/cp/account/api" target="_blank">control panel</a>.
    Then download the [PHP authentication class](https://api.transip.nl/downloads/TransIP_AccessToken.tar.gz), and put in your login username and private key.

    You can also do this process manually by sending an HTTP POST request to 'https://api.transip.nl/v6/auth' with a body containing your login and a nonce (any random string), and a signature header.
    The signature header should consist of a sha512 asn.1 hash of the full request body. Encrypt this using a private key that was generated in the control panel.

    **Example signature header**

    ```http
    Signature: W+alqMNFaKxNjRpRzGcjrk5q1PXf50usve85PMHqXDPcDZTmZksVkqAFyR30XtJAXELbg2bukUrckPe7fBR10LvMY55cCHLfKf4sA6tpC8Ck5HcT7uLN27XGiJH3i2oDe/Kb93pU2q9kP+vDIQYJX28xFEHWOibXYgcMksHSH3YiyCWcBiQFS65Jsg5M/XhyU3qMISD7icHmk7/WPw1tSYGiMqJZVjaovIqzskXQcu5iC22wZA+5evj3rlSPj9UGZsDjg+TdP69gGJ2y4nrG3qbM2BhMpUs4E3FDHJW1ZZ3VUko0rwfBBoltAT94NQrA5LCP6pXLyA9eszyouBs8ywQ==
    ```

    **Example body**

    ```json
    {
        "login": "test-user",
        "nonce": "98475920834"
    }
    ```

    Access token have a default expiration time of 30 minutes.
    You can also override this by setting the `expiration_time` property.
    This has a maximum of 1 month.

    Use a header containing your access token in every request:

    ```http
    Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJhcGkudHJhbnNpcC5ubCIsImF1ZCI6IjEwLjQuMTc5LjUiLCJpYXQiOjE0ODI4MzQ5MjIsIm5iZiI6MTQ4MjgzNDkyMiwiZXhwIjoxNDkwNjEwOTIyLCJjdXN0b21lcl9pZCI6MTE1NjMyfQ.GIlHPUt3ErWF0jXM2baXEDAE3V9y2X1ozAihrQMVnccZqS3QuPEsHjSsa8fuoWHM-kjhkfRW8Kc74or4Y83Jc6biVND9rFPJ9075rs2RdiABNFGzF3a3K1Q789O6cTau2kN55-cxAVp-tJbk39vMrJd3PrVQumKy1EYZ4YICNIm7p5D1UwBxkjNPxvesMDlVzpq3gAbnmrEWnZi3VR3TEaUzhK3Sr0MjUN3WdqIQgqLNWDBkgzfZaDebhiBSIc66x0HLz856BKZIzn4uP88Y-x8pl4DtrppZemH7h_p8vYoVC4aohAuViUq3jm-SBLRuwz1pzFM02QQ_dSAXwoTs7A
    ```

    You can also add a custom name to your access tokens. This can be done by setting the `label` property.

    All your active access tokens can be managed in the <a href="https://www.transip.nl/cp/account/api" target="_blank">control panel</a>.
    You can revoke your tokens and generate new ones.

    ## Rate limit

    The rate limit for this API uses a sliding window of 15 minutes.
    Within this window, a maximum of 1000 requests can be made per user.

    Every request returns the following headers, indicating the number of requests made within this window,
    the amount of requests remaining and the reset timestamp.

    ```http
    X-Rate-Limit-Limit: 1000
    X-Rate-Limit-Remaining: 650
    X-Rate-Limit-Reset: 1485875578
    ```

    When this rate limit is exceeded, the response contains an error with HTTP status code: `429: Too many requests`.

    ## Test mode

    In test mode every `GET` request is allowed, but all modification requests are fake, they are validated, but the actual modification is skipped.
    This means that you are able to test your api calls without doing any modification to your production environment.
    There are two different ways to test the api, you could use our test mode token or you could provide a test parameter using your own token (and thus play with your own data).

    ### Demo token

    If you use the following authorization header, you authenticate yourself as the transip demo user in test mode.

    ```http
    Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJhcGkudHJhbnNpcC5ubCIsImF1ZCI6IjEwLjQuMTc5LjUiLCJpYXQiOjE0ODI4MzQ5MjIsIm5iZiI6MTQ4MjgzNDkyMiwiZXhwIjoxNDkwNjEwOTIyLCJjdXN0b21lcl9pZCI6MTE1NjMyfQ.GIlHPUt3ErWF0jXM2baXEDAE3V9y2X1ozAihrQMVnccZqS3QuPEsHjSsa8fuoWHM-kjhkfRW8Kc74or4Y83Jc6biVND9rFPJ9075rs2RdiABNFGzF3a3K1Q789O6cTau2kN55-cxAVp-tJbk39vMrJd3PrVQumKy1EYZ4YICNIm7p5D1UwBxkjNPxvesMDlVzpq3gAbnmrEWnZi3VR3TEaUzhK3Sr0MjUN3WdqIQgqLNWDBkgzfZaDebhiBSIc66x0HLz856BKZIzn4uP88Y-x8pl4DtrppZemH7h_p8vYoVC4aohAuViUq3jm-SBLRuwz1pzFM02QQ_dSAXwoTs7A
    ```

    ### Test parameter

    By providing the test parameter on any of your requests you can use the test mode while you are authenticated as your own user.
    To give you an example, when you request a `DELETE` on a vps with the following url https://api.transip.nl/v6/vps/test-vps2?test=1 the actual delete is skipped. The same goes for any other type of modification.

    ## Order Requests

    Some API calls, as the pre-generated would automatically be accepted, will generate an invoice.
    In case direct debit is activated on the TransIP customer account associated with the API key, payment will occur at a later stage.
    This is mostly the case with products and add-ons with automatic provisioning.
    In order to prevent accidental orders, each API call that generates an invoice has a warning outlined below its description in this API documentation.
  name: Introduction
- name: General
- name: Account
- name: Domains
- name: VPS
- name: HA-IP
- name: Colocations
paths:
  /api-test:
    get:
      description: Returns pong. A simple test resource to make sure everything is
        working
      operationId: API Test
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ping: pong
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: OK
      security:
      - oauth2: []
      summary: API Test
      tags:
      - General
  /availability-zones:
    get:
      description: Lists the available AvailabilityZones.
      operationId: List available AvailabilityZones
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    availabilityZones:
                    - country: nl
                      isDefault: true
                      name: ams0
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: OK
      security:
      - oauth2: []
      summary: List available AvailabilityZones
      tags:
      - General
  /big-storages:
    get:
      description: |-
        Returns an array of all Big Storages in the given account.

        After all Big Storages have been returned as an array, you can extract it and use a specific Big Storage for the other API calls documented below.

        Should you only want to get the big storages attached to a specific VPS, set the `vpsName` parameter and only big storages that are attached to the given vps will be shown like https://api.transip.nl/v6/big-storages?vpsName=example-vps

        ::: note

        This method supports pagination, using this methods you can limit the amount of big storages returned by the api, which might be usefull if you expect a lot of response objects and you want to spread that over multiple requests. See the [documentation on pages](#header-pages) for more information on how to use this functionality.
      operationId: List all big storages
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Filters on a given vps name.
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    bigStorages:
                    - availabilityZone: ams0
                      description: Big storage description
                      diskSize: 2147483648
                      isLocked: false
                      name: example-bigstorage
                      offsiteBackups: true
                      status: active
                      vpsName: example-vps
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: OK
      security:
      - oauth2: []
      summary: List all big storages
      tags:
      - VPS
    post:
      description: |-
        With this method you are able to upgrade a bigstorage diskSize or enable backups.

        The minimum size is 2 TB and storage can be extended with up to maximum of 40 TB. Make sure to use a multitude of 2 TB.

        Optionally, to create back-ups of your Big Storage, enable off-site back-ups. We highly recommend activating back-ups.

        ::: warning

        <i class="fa fa-warning"></i> **Warning**: This API call will create an invoice!
      operationId: Upgrade big storage
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/json:
            schema:
              example:
                bigStorageName: example-bigstorage
                offsiteBackups: true
                size: 8
              properties:
                bigStorageName:
                  description: The name of the bigstorage to upgrade
                  type: string
                offsiteBackups:
                  description: Whether to order offsite backups, omit this to use
                    current value
                  type: boolean
                size:
                  description: The size of the big storage in TB's, use a multitude
                    of 2. The maximum size is 40.
                  type: number
              type: object
      responses:
        "201":
          description: Created
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Big storage with name 'example-bigstorage' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Upgrade size '2' is smaller than current size '4'
          description: Not Acceptable
      security:
      - oauth2: []
      summary: Upgrade big storage
      tags:
      - VPS
  /big-storages/{bigStorageName}:
    delete:
      description: |-
        Cancels a big storage for the specified ‘endTime’. You can set the `endTime` attribute to `end` or `immediately`, this has the following implications:

        * **end**: The Big Storage will be terminated from the end date of the agreement as can be found in the applicable quote;

        * **immediately**: The Big Storage will be terminated immediately.

         Note that canceling a Big Storage will wipe all data stored on it as well as off-site back-ups as well if these are activated.
      operationId: Cancel big storage
      parameters:
      - description: The name of the big storage
        explode: false
        in: path
        name: bigStorageName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_2'
        content:
          application/json:
            schema:
              example:
                endTime: end
              properties:
                endTime:
                  description: Cancellation time, either 'end' or 'immediately'
                  type: string
              type: object
      responses:
        "204":
          description: No Content
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Big storage with name 'example-bigstorage' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid cancellation time: ''now'', please
                      use either ''end'' or ''immediately'''
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Product already has cancellation pending
          description: Conflict
      security:
      - oauth2: []
      summary: Cancel big storage
      tags:
      - VPS
    get:
      description: Get information about a specific Big Storage and its current status.
        If the Big Storage is attached to a VPS, the output will contain the VPS name
        it’s attached to.
      operationId: Get big storage by name
      parameters:
      - description: The name of the big storage
        explode: false
        in: path
        name: bigStorageName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    bigStorage:
                      availabilityZone: ams0
                      description: Big storage description
                      diskSize: 2147483648
                      isLocked: false
                      name: example-bigstorage
                      offsiteBackups: true
                      status: active
                      vpsName: example-vps
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Big storage with name 'example-bigstorage' not found
          description: Not Found
      security:
      - oauth2: []
      summary: Get big storage by name
      tags:
      - VPS
    put:
      description: |-
        This API calls allows for altering a big storage in several ways outlined below:

        * Changing the description of a Big Storage;

        * One Big Storages can only be attached to one VPS at a time;

        * One VPS can have a maximum of 10 bigstorages attached;

        * Set the `vpsName` property to the VPS name to attach to for attaching Big Storage;

        * Set the `vpsName` property to null to detach the Big Storage from the currently attached VPS.
      operationId: Update big storage
      parameters:
      - description: The name of the big storage
        explode: false
        in: path
        name: bigStorageName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          application/json:
            schema:
              example:
                bigStorage:
                  availabilityZone: ams0
                  description: Big storage description
                  diskSize: 2147483648
                  isLocked: false
                  name: example-bigstorage
                  offsiteBackups: true
                  status: active
                  vpsName: example-vps
              properties:
                bigStorage:
                  $ref: '#/components/schemas/inline_response_200_3_bigStorage'
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Please supply the '`description` or `vpsName`' parameter
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is customer locked, no modification is
                      allowed
          description: Conflict
      security:
      - oauth2: []
      summary: Update big storage
      tags:
      - VPS
  /big-storages/{bigStorageName}/backups:
    get:
      description: Using this API call, you are able to list all backups belonging
        to a specific big storage.
      operationId: List backups for a big storage
      parameters:
      - description: The name of the big storage
        explode: false
        in: path
        name: bigStorageName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    backups:
                    - availabilityZone: ams0
                      dateTimeCreate: 2019-12-31 09:13:55
                      diskSize: 4294967296
                      id: 1583
                      status: active
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: OK
      security:
      - oauth2: []
      summary: List backups for a big storage
      tags:
      - VPS
  /big-storages/{bigStorageName}/backups/{backupId}:
    patch:
      description: To revert a backup from a big storage, retrieve the `backupId`
        from the [backups](#vps-backups-get-1) resource. Please note this is only
        possible when any backups are created with the off-site backups feature, otherwise
        no backups will be made nor listed.
      operationId: Revert a big storage backup
      parameters:
      - description: The name of the big storage
        explode: false
        in: path
        name: bigStorageName
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the backup
        example: "625584"
        explode: false
        in: path
        name: backupId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_3'
        content:
          application/json:
            schema:
              example:
                action: revert
              properties:
                action:
                  type: string
              type: object
      responses:
        "204":
          description: No Content
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Backup with id '1337' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Actions on Backup '123' are temporary disabled
          description: Conflict
      security:
      - oauth2: []
      summary: Revert a big storage backup
      tags:
      - VPS
  /big-storages/{bigStorageName}/usage:
    get:
      description: |-
        Get the usage statistics for a big storage. You can specify a `dateTimeStart` and `dateTimeEnd` parameter in the UNIX timestamp format. When none given, traffic for the past 24 hours are returned. The maximum period is one month.

        When the big storage is not attached to a vps, there are no usage statistics available. Therefore, the response returned will be a 406 exception. If the big storage is re-attached to another vps then the old statistics are no longer available.
      operationId: Get big storage usage statistics
      parameters:
      - description: The name of the big storage
        explode: false
        in: path
        name: bigStorageName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_4'
        content:
          application/json:
            schema:
              example:
                dateTimeEnd: 1490064468
                dateTimeStart: 1490023668
              properties:
                dateTimeEnd:
                  description: The end date of the usage statistics
                  type: number
                dateTimeStart:
                  description: The start date of the usage statistics
                  type: number
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    usage:
                    - date: 1574783109
                      iopsRead: 0.27
                      iopsWrite: 0.13
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
          description: OK
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Big storage 'example-bigstorage' is not attached to a VPS
          description: Not Acceptable
      security:
      - oauth2: []
      summary: Get big storage usage statistics
      tags:
      - VPS
  /colocations:
    get:
      description: Gets a list of colocations currently registered in your account.
        For every colocation service in your account, the corresponding name and IP
        range(s) are returned.
      operationId: List all colocations
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    colocations:
                    - ipRanges:
                      - 2a01:7c8:c038:6::/64
                      name: example2
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
          description: OK
      security:
      - oauth2: []
      summary: List all colocations
      tags:
      - Colocations
  /colocations/{colocationName}:
    get:
      description: Get a information about a specific colocation.
      operationId: Get colocation
      parameters:
      - description: Colocation name
        example: example2
        explode: false
        in: path
        name: colocationName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    colocation:
                      ipRanges:
                      - 2a01:7c8:c038:6::/64
                      name: example2
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Colocation with name 'lala' not found
          description: Not Found
      security:
      - oauth2: []
      summary: Get colocation
      tags:
      - Colocations
  /colocations/{colocationName}/ip-addresses:
    get:
      description: List IP addresses based on the colocation they’re assigned to.
        The address itself, its subnet mask, gateway and DNS resolvers in that range.
      operationId: List IP addresses for a colocation
      parameters:
      - description: Colocation name
        example: example2
        explode: false
        in: path
        name: colocationName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ipAddresses:
                    - address: 37.97.254.6
                      dnsResolvers:
                      - 195.8.195.8
                      - 195.135.195.135
                      gateway: 37.97.254.1
                      reverseDns: example.com
                      subnetMask: 255.255.255.0
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Colocation with name 'lala' not found
          description: Not Found
      security:
      - oauth2: []
      summary: List IP addresses for a colocation
      tags:
      - Colocations
    post:
      description: |-
        Create an IP address for a colocation by specifying the colocation name the IP address should be assigned to. Note the IP address should be in a range you own.

        Currently, new IP addresses have to be requested manually through the support system.

        Optionally, you can also set the reverse DNS by specifying the `reverseDns` attribute.
      operationId: Create a new IP address for a colocation
      parameters:
      - description: Colocation name
        example: example2
        explode: false
        in: path
        name: colocationName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_5'
        content:
          application/json:
            schema:
              example:
                ipAddress: 2a01:7c8:3:1337::6
                reverseDns: example.com
              properties:
                ipAddress:
                  description: The IP address to register to the colocation
                  type: string
                reverseDns:
                  description: Reverse DNS, also known as the PTR record
                  type: string
              type: object
      responses:
        "201":
          description: Created
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: IP address '149.210.215.249' does not belong to a range
                      this user can modify
          description: Forbidden
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: IP address '149.210.215.249' already exists
          description: Not Acceptable
      security:
      - oauth2: []
      summary: Create a new IP address for a colocation
      tags:
      - Colocations
  /colocations/{colocationName}/ip-addresses/{ipAddress}:
    delete:
      description: Delete an IP addresses for a colocation. The IP address will be
        removed.
      operationId: Delete an IP address
      parameters:
      - description: Colocation name
        example: example2
        explode: false
        in: path
        name: colocationName
        required: true
        schema:
          type: string
        style: simple
      - description: Colocation IP address
        example: 149.210.215.249
        explode: false
        in: path
        name: ipAddress
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: IP address '149.210.215.249' does not belong to a range
                      this user can modify
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: IP address '8.8.8.8' not found
          description: Not Found
      security:
      - oauth2: []
      summary: Delete an IP address
      tags:
      - Colocations
    get:
      description: |-
        Get IP addresses information for a specific colocation and IP address.

        The address itself, its subnet mask, gateway and DNS resolvers in that range.
      operationId: Get IP addresses for a colocation
      parameters:
      - description: Colocation name
        example: example2
        explode: false
        in: path
        name: colocationName
        required: true
        schema:
          type: string
        style: simple
      - description: Colocation IP address
        example: 149.210.215.249
        explode: false
        in: path
        name: ipAddress
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ipAddress:
                      address: 37.97.254.6
                      dnsResolvers:
                      - 195.8.195.8
                      - 195.135.195.135
                      gateway: 37.97.254.1
                      reverseDns: example.com
                      subnetMask: 255.255.255.0
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: IP address '8.8.8.8' not found
          description: Not Found
      security:
      - oauth2: []
      summary: Get IP addresses for a colocation
      tags:
      - Colocations
    put:
      description: |-
        Sets a reverse DNS name for an IP address.

        Upon adding a new IP address for a colocation, you’re able to set the reverse DNS instantly along with the API call.
      operationId: Set reverse DNS for an IP address
      parameters:
      - description: Colocation name
        example: example2
        explode: false
        in: path
        name: colocationName
        required: true
        schema:
          type: string
        style: simple
      - description: Colocation IP address
        example: 149.210.215.249
        explode: false
        in: path
        name: ipAddress
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_6'
        content:
          application/json:
            schema:
              example:
                ipAddress:
                  address: 37.97.254.6
                  dnsResolvers:
                  - 195.8.195.8
                  - 195.135.195.135
                  gateway: 37.97.254.1
                  reverseDns: example.com
                  subnetMask: 255.255.255.0
              properties:
                ipAddress:
                  $ref: '#/components/schemas/_colocations__colocationName__ip_addresses__ipAddress__ipAddress'
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: IP address '149.210.215.249' does not belong to a range
                      this user can modify
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: IP address '8.8.8.8' not found
          description: Not Found
      security:
      - oauth2: []
      summary: Set reverse DNS for an IP address
      tags:
      - Colocations
  /colocations/{colocationName}/remote-hands:
    post:
      description: Send a request to the datacenter engineer to perform simple task
        on your server, e.g. a powercycle.
      operationId: Create a Remotehands request
      parameters:
      - description: Colocation name
        example: example2
        explode: false
        in: path
        name: colocationName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_7'
        content:
          application/json:
            schema:
              example:
                remoteHands:
                  coloName: example2
                  contactName: Herman Kaakdorst
                  expectedDuration: 15
                  instructions: Reboot server with label Loadbalancer0
                  phoneNumber: +31 612345678
              properties:
                remoteHands:
                  $ref: '#/components/schemas/_colocations__colocationName__remote_hands_remoteHands'
              type: object
      responses:
        "201":
          description: Created
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Colocation with name 'lala' not found
          description: Not Found
      security:
      - oauth2: []
      summary: Create a Remotehands request
      tags:
      - Colocations
  /domain-availability:
    get:
      description: Check the availability for multiple domain names.
      operationId: Check the availability for multiple domain names
      requestBody:
        $ref: '#/components/requestBodies/inline_object_8'
        content:
          application/json:
            schema:
              example:
                domainNames:
                - example.com
                - example.nl
              properties:
                domainNames:
                  description: array of domainNames to check
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    availability:
                    - actions:
                      - register
                      domainName: example.com
                      status: free
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
          description: OK
      security:
      - oauth2: []
      summary: Check the availability for multiple domain names
      tags:
      - Domains
  /domain-availability/{domainName}:
    get:
      description: This method allows you to check the availability for a domain name.
      operationId: Check availability for a domain name
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    availability:
                      actions:
                      - register
                      domainName: example.com
                      status: free
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
          description: OK
      security:
      - oauth2: []
      summary: Check availability for a domain name
      tags:
      - Domains
  /domains:
    get:
      description: |-
        This API call allows you to list all domain names in your TransIP account.

        Should you want to filter the domains list by a custom tag, set the `tag` parameter and only domains with the tag will be returned like https://api.transip.nl/v6/domains?tag=customTag,anotherTag

        ::: note

        This method supports pagination, using this methods you can limit the amount of domains returned by the api, which might be usefull if you expect a lot of response objects and you want to spread that over multiple requests. See the [documentation on pages](#header-pages) for more information on how to use this functionality.
      operationId: List all domains
      requestBody:
        $ref: '#/components/requestBodies/List_all_domainsTags'
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    domains:
                    - tags:
                      - customTag
                      - anotherTag
                      authCode: kJqfuOXNOYQKqh/jO4bYSn54YDqgAt1ksCe+ZG4Ud4nfpzw8qBsfR2JqAj7Ce12SxKcGD09v+yXd6lrm
                      cancellationDate: 2020-01-01 12:00:00
                      cancellationStatus: signed
                      isDnsOnly: false
                      isTransferLocked: false
                      isWhitelabel: false
                      name: example.com
                      registrationDate: 2016-01-01
                      renewalDate: 2020-01-01
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
          description: OK
      security:
      - oauth2: []
      summary: List all domains
      tags:
      - Domains
    post:
      description: |-
        Transfer a domain to TransIP using its transfer key (or ‘EPP code’) by specifying it in the `authCode` parameter.

        You can override the contacts, nameservers and DNS entries immediately, but is not mandatory.

        ::: warning

        <i class="fa fa-warning"></i> **Warning**: This API call will create an invoice!
      operationId: Transfer a domain
      requestBody:
        $ref: '#/components/requestBodies/inline_object_9'
        content:
          application/json:
            schema:
              example:
                authCode: CYPMaVH+9MRjXGBc3InzHs7vNSUBPOjwpZm3GO+iDLHnFLtiP7sOKqW5JD1WeUpevZM6q1qS5YH9dGSp
                contacts:
                - city: Leiden
                  companyKvk: "83057825"
                  companyName: Example B.V.
                  companyType: BV
                  country: nl
                  email: example@example.com
                  faxNumber: +31 715241919
                  firstName: John
                  lastName: Doe
                  number: "12"
                  phoneNumber: +31 715241919
                  postalCode: 1337 XD
                  street: Easy street
                  type: registrant
                dnsEntries:
                - content: 127.0.0.1
                  expire: 86400
                  name: www
                  type: A
                domainName: example.com
                nameservers:
                - hostname: ns0.transip.nl
                  ipv4: null
                  ipv6: null
              properties:
                authCode:
                  description: The auth code of the domain.
                  type: string
                contacts:
                  type: array
                dnsEntries:
                  type: array
                domainName:
                  type: string
                nameservers:
                  type: array
              type: object
      responses:
        "201":
          description: Created
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: The domain 'example.com' is not registered and thus cannot
                      be transferred
          description: Conflict
      security:
      - oauth2: []
      summary: Transfer a domain
      tags:
      - Domains
  /domains/{domainName}:
    delete:
      description: |-
        Cancels the specified domain. Depending on the time you want to cancel the domain, specify 'end' or 'immediately' for the `endTime` attribute.

        Upon canceling a domain name (or any other product) it will be shown under [cancellations](https://www.transip.nl/cp/account/opzeggingen/) in the TransIP control panel. By using the API method outlined above ([Retrieve an existing domain](#domains-domains-get-1)) you’ll be able to see if the domain name has been canceled yet.
      operationId: Cancel a domain
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_11'
        content:
          application/json:
            schema:
              example:
                endTime: end
              properties:
                endTime:
                  description: Cancellation time, either 'end' or 'immediately'
                  type: string
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: The domain 'example.com' has additional products attached,
                      and thus can't be cancelled
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid cancellation time: ''now'', please
                      use either ''end'' or ''immediately'''
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: The domain 'example.com' already has a cancellation pending
          description: Conflict
      security:
      - oauth2: []
      summary: Cancel a domain
      tags:
      - Domains
    get:
      description: Show information about a specific domain name.
      operationId: Retrieve an existing domain
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    domain:
                      tags:
                      - customTag
                      - anotherTag
                      authCode: kJqfuOXNOYQKqh/jO4bYSn54YDqgAt1ksCe+ZG4Ud4nfpzw8qBsfR2JqAj7Ce12SxKcGD09v+yXd6lrm
                      cancellationDate: 2020-01-01 12:00:00
                      cancellationStatus: signed
                      isDnsOnly: false
                      isTransferLocked: false
                      isWhitelabel: false
                      name: example.com
                      registrationDate: 2016-01-01
                      renewalDate: 2020-01-01
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
      security:
      - oauth2: []
      summary: Retrieve an existing domain
      tags:
      - Domains
    put:
      description: |-
        Update an existing domain. To apply or release a lock, change the `isTransferLocked` attribute. To change tags, update the `tags` attribute.

        You’re able to add the domain name under a whitelabel account. Note this whitelabel functionality is available only for .nl domains. Furthermore, the whitelabel account must be activated first at regular charge. Upon activating, newly registered domains with the `isWhitelabel` attribute set to ‘true’ will be shown under a whitelabel registrar name.

        For more information about whitelabel domain name registration at TransIP, please see the documentation regarding [whitelabel](#domains-whitelabel-post).

        ::: warning

        <i class="fa fa-warning"></i> **Warning**: When adding the domain to your whitelabel, it cannot be reverted!
      operationId: Update a domain
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_10'
        content:
          application/json:
            schema:
              example:
                domain:
                  tags:
                  - customTag
                  - anotherTag
                  authCode: kJqfuOXNOYQKqh/jO4bYSn54YDqgAt1ksCe+ZG4Ud4nfpzw8qBsfR2JqAj7Ce12SxKcGD09v+yXd6lrm
                  cancellationDate: 2020-01-01 12:00:00
                  cancellationStatus: signed
                  isDnsOnly: false
                  isTransferLocked: false
                  isWhitelabel: false
                  name: example.com
                  registrationDate: 2016-01-01
                  renewalDate: 2020-01-01
              properties:
                domain:
                  $ref: '#/components/schemas/_domains__domainName__domain'
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: You do not have a whitelabel account yet, please order
                      one first
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain 'example.com' has action 'changeNameservers' running,
                      no modification is allowed
          description: Conflict
      security:
      - oauth2: []
      summary: Update a domain
      tags:
      - Domains
  /domains/{domainName}/actions:
    delete:
      description: With this method you are able to cancel a domain action while it
        is still pending or being processed.
      operationId: Cancel domain action
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid domain name: ''power-ranger$.nl'''
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Unable to cancel the running action for 'example.com' at
                      this time
          description: Conflict
      security:
      - oauth2: []
      summary: Cancel domain action
      tags:
      - Domains
    get:
      description: |-
        Domain actions are kept track of by TransIP. Domain actions include, for example, changing nameservers.

        When no action is running the action's `name` parameter will be `null`.

        The action message will contain a failure message, please provide the information to fix this using the method below.
      operationId: Get current domain action
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    action:
                      hasFailed: false
                      message: success
                      name: changeNameservers
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid domain name: ''power-ranger$.nl'''
          description: Not Acceptable
      security:
      - oauth2: []
      summary: Get current domain action
      tags:
      - Domains
    patch:
      description: Domain actions can fail due to wrong information, this method allows
        you to retry an action. You only have to specify information that is required
        for the action.
      operationId: Retry domain action
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_12'
        content:
          application/json:
            schema:
              example:
                contacts:
                - city: Leiden
                  companyKvk: "83057825"
                  companyName: Example B.V.
                  companyType: BV
                  country: nl
                  email: example@example.com
                  faxNumber: +31 715241919
                  firstName: John
                  lastName: Doe
                  number: "12"
                  phoneNumber: +31 715241919
                  postalCode: 1337 XD
                  street: Easy street
                  type: registrant
                dnsEntries:
                - content: 127.0.0.1
                  expire: 86400
                  name: www
                  type: A
                nameservers:
                - hostname: ns0.transip.nl
                  ipv4: null
                  ipv6: null
              properties:
                authCode:
                  type: string
                contacts:
                  type: array
                dnsEntries:
                  type: array
                nameservers:
                  type: array
              type: object
      responses:
        "204":
          description: No Content
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid domain name: ''power-ranger$.nl'''
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain 'example.com' has action 'changeNameservers' running,
                      no modification is allowed.
          description: Conflict
      security:
      - oauth2: []
      summary: Retry domain action
      tags:
      - Domains
  /domains/{domainName}/branding:
    get:
      description: |-
        Get domain branding information for a given domain name.

        Please note this API call does not return the whitelabel account status (just the branding).

        Branding options can be altered from the TransIP control panel or by using the API call outlined below.
      operationId: Get domain branding
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    branding:
                      bannerLine1: Example B.V.
                      bannerLine2: Example
                      bannerLine3: http://www.example.com/products
                      companyName: Example B.V.
                      companyUrl: www.example.com
                      supportEmail: admin@example.com
                      termsOfUsageUrl: www.example.com/tou
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid domain name: ''power-ranger$.nl'''
          description: Not Acceptable
      security:
      - oauth2: []
      summary: Get domain branding
      tags:
      - Domains
    put:
      description: |-
        Domain name branding can be set or altered using this API call. Among others, you can set your own company name and company URL, replacing the default values which are usually TransIP contact details.

        Changes will not apply to previously registered domain names. The new settings will, in most cases, only show up for newly registered domain names after the changes were made.
      operationId: Update domain branding
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_13'
        content:
          application/json:
            schema:
              example:
                branding:
                  bannerLine1: Example B.V.
                  bannerLine2: Example
                  bannerLine3: http://www.example.com/products
                  companyName: Example B.V.
                  companyUrl: www.example.com
                  supportEmail: admin@example.com
                  termsOfUsageUrl: www.example.com/tou
              properties:
                branding:
                  $ref: '#/components/schemas/inline_response_200_15_branding'
              type: object
      responses:
        "204":
          description: No Content
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain TLD doesn't support branding
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain 'example.com' has action 'changeNameservers' running,
                      no modification is allowed
          description: Conflict
      security:
      - oauth2: []
      summary: Update domain branding
      tags:
      - Domains
  /domains/{domainName}/contacts:
    get:
      description: |-
        Returns a list of all contacts for a domain. One or multiple of the following contacts will be shown:

        * Domain name owner;

        * Administrative contact;

        * Technical contact.
      operationId: List all contacts for a domain
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    contacts:
                    - city: Leiden
                      companyKvk: "83057825"
                      companyName: Example B.V.
                      companyType: BV
                      country: nl
                      email: example@example.com
                      faxNumber: +31 715241919
                      firstName: John
                      lastName: Doe
                      number: "12"
                      phoneNumber: +31 715241919
                      postalCode: 1337 XD
                      street: Easy street
                      type: registrant
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid domain name: ''power-ranger$.nl'''
          description: Not Acceptable
      security:
      - oauth2: []
      summary: List all contacts for a domain
      tags:
      - Domains
    put:
      description: |-
        Use this API call in case you want to alter domain name contacts after the registration of a domain name.

        * Some TLD do not support changing all the fields like the AddressData. This will throw an error with a `406` http status code.
      operationId: Update contacts for a domain
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_14'
        content:
          application/json:
            schema:
              example:
                contacts:
                - city: Leiden
                  companyKvk: "83057825"
                  companyName: Example B.V.
                  companyType: BV
                  country: nl
                  email: example@example.com
                  faxNumber: +31 715241919
                  firstName: John
                  lastName: Doe
                  number: "12"
                  phoneNumber: +31 715241919
                  postalCode: 1337 XD
                  street: Easy street
                  type: registrant
              properties:
                contacts:
                  type: array
              type: object
      responses:
        "204":
          description: No Content
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain TLD doesn't support 'x' capability
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain 'example.com' is locked, no modification is allowed
          description: Conflict
      security:
      - oauth2: []
      summary: Update contacts for a domain
      tags:
      - Domains
  /domains/{domainName}/dns:
    delete:
      description: |-
        Remove a single DNS entry from a domain specified by the `dnsEntry` parameter.

        If there are duplicate DNS entries found then a single entry will be removed when performing this action.
      operationId: Remove a DNS entry from a domain
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_17'
        content:
          application/json:
            schema:
              example:
                dnsEntry:
                  content: 127.0.0.1
                  expire: 86400
                  name: www
                  type: A
              properties:
                dnsEntry:
                  $ref: '#/components/schemas/_domains__domainName__dns_dnsEntry'
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: DNS Entry changes have temporarily been disabled.
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
      security:
      - oauth2: []
      summary: Remove a DNS entry from a domain
      tags:
      - Domains
    get:
      description: List all DNS entries for a domain
      operationId: List all DNS entries for a domain
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    dnsEntries:
                    - content: 127.0.0.1
                      expire: 86400
                      name: www
                      type: A
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid domain name: ''power-ranger$.nl'''
          description: Not Acceptable
      security:
      - oauth2: []
      summary: List all DNS entries for a domain
      tags:
      - Domains
    patch:
      description: |-
        Update the content of a single DNS entry, identified by the `name`, `expire` and `type` attributes.

        When multiple or none of the current DNS entries matches, the response will be an error with http status code `406`.
      operationId: Update single DNS entry
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_18'
        content:
          application/json:
            schema:
              example:
                dnsEntry:
                  content: 127.0.0.1
                  expire: 86400
                  name: www
                  type: A
              properties:
                dnsEntry:
                  $ref: '#/components/schemas/_domains__domainName__dns_dnsEntry'
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: DNS Entry changes have temporarily been disabled
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Multiple matches found for DNS entry 'test 300 A'
          description: Not Acceptable
      security:
      - oauth2: []
      summary: Update single DNS entry
      tags:
      - Domains
    post:
      description: |-
        Add a single DNS entry to the existing zone file.

        In case you want to overwrite the entire zone, please use the method below.
      operationId: Add a new single DNS entry to a domain
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_16'
        content:
          application/json:
            schema:
              example:
                dnsEntry:
                  content: 127.0.0.1
                  expire: 86400
                  name: www
                  type: A
              properties:
                dnsEntry:
                  $ref: '#/components/schemas/_domains__domainName__dns_dnsEntry'
              type: object
      responses:
        "201":
          description: Created
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: DNS Entry changes have temporarily been disabled
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Invalid DNS entry type 'B'
          description: Not Acceptable
      security:
      - oauth2: []
      summary: Add a new single DNS entry to a domain
      tags:
      - Domains
    put:
      description: |-
        This method will wipe the entire DNS zone file and replace it with the given records. Please note that data is not recoverable using an integrated method in the API, so make sure to use this with care.

        There is no hard limit as to the amount of DNS entries that can be added at once.

        ::: warning

        <i class="fa fa-warning"></i> **Warning**: all current entries will be replaced!
      operationId: Update all DNS entries for a domain
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_15'
        content:
          application/json:
            schema:
              example:
                dnsEntries:
                - content: 127.0.0.1
                  expire: 86400
                  name: www
                  type: A
              properties:
                dnsEntries:
                  type: array
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: DNS Entry changes have temporarily been disabled
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid domain name: ''power-ranger$.nl'''
          description: Not Acceptable
      security:
      - oauth2: []
      summary: Update all DNS entries for a domain
      tags:
      - Domains
  /domains/{domainName}/dnssec:
    get:
      description: |-
        This API call lists all DNSSEC entries for a domain once set.
         This includes the key tag, flags, algorithm and public key.
      operationId: List DNSSEC entries
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    dnsSecEntries:
                    - algorithm: 8
                      flags: 1
                      keyTag: 67239
                      publicKey: AwEAAc31XDE3QWphFz6CR77Hp3ZjDRx7zqe1AXx1QMvqFKzrEKrX4oj2nv8zDquCotbQ1ObHI4KGLRf3ycaq0fYslXFJ1JxLxJUl/lpGvE8OkqdhGW3vj3YS9Mlbf0yYC2bNUY875UgDNRLqWtVSEXO/PCcqr3RIzpngu+6JF/1bfQB7ituFHxoanhAiWOpc24ZAnrhmyIsDwyy1k0iyvVTSyPugnYD/bF7CR7ObQCiuucjwCkSBHJ4gcihHvyPDU/DlsSJeEO/G31zFxzXwHjr3h3mdJE4mQuceS11e5/c9hht6rUL0PEGve1Ygknz+0ruAinlhFYnny2uxES5M9r0FIM=
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid domain name: ''power-ranger$.nl'''
          description: Not Acceptable
      security:
      - oauth2: []
      summary: List DNSSEC entries
      tags:
      - Domains
    put:
      description: |-
        This method will replace all DNSSEC entries with the ones that are provided via the `dnsSecEntries` parameter.

        ::: warning

        <i class="fa fa-warning"></i> **Warning**: all current entries will be replaced!
      operationId: Update all DNSSEC entries
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_19'
        content:
          application/json:
            schema:
              example:
                dnsSecEntries:
                - algorithm: 8
                  flags: 1
                  keyTag: 67239
                  publicKey: AwEAAc31XDE3QWphFz6CR77Hp3ZjDRx7zqe1AXx1QMvqFKzrEKrX4oj2nv8zDquCotbQ1ObHI4KGLRf3ycaq0fYslXFJ1JxLxJUl/lpGvE8OkqdhGW3vj3YS9Mlbf0yYC2bNUY875UgDNRLqWtVSEXO/PCcqr3RIzpngu+6JF/1bfQB7ituFHxoanhAiWOpc24ZAnrhmyIsDwyy1k0iyvVTSyPugnYD/bF7CR7ObQCiuucjwCkSBHJ4gcihHvyPDU/DlsSJeEO/G31zFxzXwHjr3h3mdJE4mQuceS11e5/c9hht6rUL0PEGve1Ygknz+0ruAinlhFYnny2uxES5M9r0FIM=
              properties:
                dnsSecEntries:
                  type: array
              type: object
      responses:
        "204":
          description: No Content
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid domain name: ''power-ranger$.nl'''
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: DNSSEC Entries for domain 'example.com' cannot be edited.
          description: Conflict
      security:
      - oauth2: []
      summary: Update all DNSSEC entries
      tags:
      - Domains
  /domains/{domainName}/nameservers:
    get:
      description: This method will list all nameservers currently set for a domain.
      operationId: List nameservers for a domain
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    nameservers:
                    - hostname: ns0.transip.nl
                      ipv4: null
                      ipv6: null
              schema:
                $ref: '#/components/schemas/inline_response_200_19'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid domain name: ''power-ranger$.nl'''
          description: Not Acceptable
      security:
      - oauth2: []
      summary: List nameservers for a domain
      tags:
      - Domains
    put:
      description: Change the nameservers for a domain.
      operationId: Update nameservers for a domain
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_20'
        content:
          application/json:
            schema:
              example:
                nameservers:
                - hostname: ns0.transip.nl
                  ipv4: null
                  ipv6: null
              properties:
                nameservers:
                  type: array
              type: object
      responses:
        "204":
          description: No Content
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid domain name: ''power-ranger$.nl'''
          description: Not Acceptable
      security:
      - oauth2: []
      summary: Update nameservers for a domain
      tags:
      - Domains
  /domains/{domainName}/ssl:
    get:
      description: Retrieves a list of all SSL certificates for a domain.
      operationId: List all SSL certificates
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    certificates:
                    - certificateId: 12358
                      commonName: example.com
                      expirationDate: 2019-10-24 12:59:59
                      status: active
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with name 'example.com' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid domain name: ''power-ranger$.nl'''
          description: Not Acceptable
      security:
      - oauth2: []
      summary: List all SSL certificates
      tags:
      - Domains
  /domains/{domainName}/ssl/{certificateId}:
    get:
      description: Retrieves a single SSL certificate by id.
      operationId: Get SSL certificate by id
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the SSL certificate
        example: "12358"
        explode: false
        in: path
        name: certificateId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    certificate:
                      certificateId: 12358
                      commonName: example.com
                      expirationDate: 2019-10-24 12:59:59
                      status: active
              schema:
                $ref: '#/components/schemas/inline_response_200_21'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Certificate with id '1337' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid domain name: ''power-ranger$.nl'''
          description: Not Acceptable
      security:
      - oauth2: []
      summary: Get SSL certificate by id
      tags:
      - Domains
  /domains/{domainName}/whois:
    get:
      description: This method will return the WHOIS information for a domain name.
      operationId: Get WHOIS information for a domain name
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    whois: ""
              schema:
                $ref: '#/components/schemas/inline_response_200_22'
          description: OK
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid domain name: ''power-ranger$.nl'''
          description: Not Acceptable
      security:
      - oauth2: []
      summary: Get WHOIS information for a domain name
      tags:
      - Domains
  /haips:
    get:
      description: |-
        Lists all HA-IPs currently registered in your account.

        By looping through the entire output and splitting the array, you can gather information about a specific HA-IP. However, we do not recommend getting the entire amount of HA-IPs in case you already know the HA-IP name - you can get the same array without the need to loop through all HA-IPs. Use the [ha-ip-get](#ha-ip-ha-ip-get-1) method for this.

        ::: note

        This method supports pagination, using this method you can limit the amount of HA-IPs returned by the api, which might be useful if you expect a lot of response objects and you want to spread that over multiple requests. See the [documentation on pages](#header-pages) for more information on how to use this functionality.
      operationId: List all HA-IPs
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    haips:
                    - description: frontend cluster
                      healthCheckInterval: 3000
                      httpHealthCheckPath: /status.php
                      httpHealthCheckPort: 443
                      httpHealthCheckSsl: true
                      ipAddresses:
                      - 10.3.37.1
                      - 10.3.38.1
                      ipSetup: ipv6to4
                      ipv4Address: 37.97.254.7
                      ipv6Address: 2a01:7c8:3:1337::1
                      isLoadBalancingEnabled: true
                      loadBalancingMode: cookie
                      name: example-haip
                      ptrRecord: frontend.example.com
                      status: active
                      stickyCookieName: PHPSESSID
              schema:
                $ref: '#/components/schemas/inline_response_200_23'
          description: OK
      security:
      - oauth2: []
      summary: List all HA-IPs
      tags:
      - HA-IP
    post:
      description: |-
        Order a HA-IP. After assigning the HA-IP to an IP (which can be done through the API as well) all incoming TCP traffic will be routed to the specified IP addresses (only transip VPS IPs are allowed).

        ::: warning

        <i class="fa fa-warning"></i> **Warning**: This API call will create an invoice!
      operationId: Order a new HA-IP
      requestBody:
        $ref: '#/components/requestBodies/inline_object_21'
        content:
          application/json:
            schema:
              example:
                description: myhaip01
                productName: haip-pro-contract
              properties:
                description:
                  description: Optional description for the the HA-IP, this you can
                    use to identify your HA-IP once created
                  type: string
                productName:
                  description: Required HA-IP product name to order
                  type: string
              type: object
      responses:
        "201":
          description: Created
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP product 'haip-extreme-contract' is not found
          description: Not Found
      security:
      - oauth2: []
      summary: Order a new HA-IP
      tags:
      - HA-IP
  /haips/{haipName}:
    delete:
      description: |-
        With this method you are able to cancel a HA-IP.

        When specifying 'end' for `endTime`, the HA-IP will be canceled at the end of the contract period. In case you specify 'immediately' the HA-IP will be detached from any IPs it's currently attached to and traffic will no longer be proxied.
      operationId: Cancel a HA-IP
      parameters:
      - description: The HA-IP name
        example: example-haip
        explode: false
        in: path
        name: haipName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_23'
        content:
          application/json:
            schema:
              example:
                endTime: end
              properties:
                endTime:
                  description: Cancellation time, either 'end' or 'immediately'
                  type: string
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP with name 'example-haip' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid cancellation time: ''now'', please
                      use either ''end'' or ''immediately'''
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' has an action running, no modification
                      is allowed
          description: Conflict
      security:
      - oauth2: []
      summary: Cancel a HA-IP
      tags:
      - HA-IP
    get:
      description: Get information about a specific HA-IP such as the IP(s) it's currently
        assigned to and the IPv4 and IPv6 address of the HA-IP.
      operationId: Get HA-IP info
      parameters:
      - description: The HA-IP name
        example: example-haip
        explode: false
        in: path
        name: haipName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    haip:
                      description: frontend cluster
                      healthCheckInterval: 3000
                      httpHealthCheckPath: /status.php
                      httpHealthCheckPort: 443
                      httpHealthCheckSsl: true
                      ipAddresses:
                      - 10.3.37.1
                      - 10.3.38.1
                      ipSetup: ipv6to4
                      ipv4Address: 37.97.254.7
                      ipv6Address: 2a01:7c8:3:1337::1
                      isLoadBalancingEnabled: true
                      loadBalancingMode: cookie
                      name: example-haip
                      ptrRecord: frontend.example.com
                      status: active
                      stickyCookieName: PHPSESSID
              schema:
                $ref: '#/components/schemas/inline_response_200_24'
          description: OK
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP with name 'example-haip' not found
          description: Not Found
      security:
      - oauth2: []
      summary: Get HA-IP info
      tags:
      - HA-IP
    put:
      description: |-
        This API calls allows for altering a HA-IP in several ways outlined below:

        * Set the description of a HA-IP;

        * Set the PTR record;

        * Set the httpHealthCheckPath, must start with a /;

        * Set the httpHealthCheckPort, the port must be configured on the HA-IP [PortConfigurations](#ha-ip-ha-ip-port-configurations).

         Load balancing options (`loadBalancingMode`):

        * **roundrobin**: forward to next address everytime;

        * **cookie**: forward to a fixed server, based on the cookie;

        * **source**: choose a server to forward to based on the source address.

         Ip setup options (`ipSetup`):

        * **both**: accept ipv4 and ipv6 and forward them to seperate ipv4 and ipv6 addresses;

        * **noipv6**: do not accept ipv6 traffic;

        * **ipv6to4**: forward ipv6 traffic to ipv4.
      operationId: Update a HA-IP
      parameters:
      - description: The HA-IP name
        example: example-haip
        explode: false
        in: path
        name: haipName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_22'
        content:
          application/json:
            schema:
              example:
                haip:
                  description: frontend cluster
                  healthCheckInterval: 3000
                  httpHealthCheckPath: /status.php
                  httpHealthCheckPort: 443
                  httpHealthCheckSsl: true
                  ipAddresses:
                  - 10.3.37.1
                  - 10.3.38.1
                  ipSetup: ipv6to4
                  ipv4Address: 37.97.254.7
                  ipv6Address: 2a01:7c8:3:1337::1
                  isLoadBalancingEnabled: true
                  loadBalancingMode: cookie
                  name: example-haip
                  ptrRecord: frontend.example.com
                  status: active
                  stickyCookieName: PHPSESSID
              properties:
                haip:
                  $ref: '#/components/schemas/_haips__haipName__haip'
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP with name 'example-haip' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid hostname: ''test&@*#'''
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' has an action running, no modification
                      is allowed
          description: Conflict
      security:
      - oauth2: []
      summary: Update a HA-IP
      tags:
      - HA-IP
  /haips/{haipName}/certificates:
    get:
      description: |-
        List the SSL certificates that are currently used by this HA-IP.

        Ssl certificate id refers to the ssl certificate found in [domain ssl](#domains-ssl)
      operationId: List all HA-IP certificates
      parameters:
      - description: The HA-IP name
        example: example-haip
        explode: false
        in: path
        name: haipName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    certificates:
                    - commonName: example.com
                      expirationDate: 2019-11-23
                      id: 25478
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
          description: OK
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP with name 'example-haip' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Actions on HA-IP 'example-haip' are temporary disabled
          description: Conflict
      security:
      - oauth2: []
      summary: List all HA-IP certificates
      tags:
      - HA-IP
    post:
      description: |-
        Add a LetsEncrypt certificate to your HA-IP. We will take care of all the validation and renewals.

        In order to provide free LetsEncrypt certificates for the domains on your HA-IP, some requirements must be met in order to complete the certificate request:

        - **DNS** the given CommonName must resolve to the HA-IP IP. IPv6 is not required, but when set, it must resolve to the HA-IP IPv6;

        - **PortConfiguration** LetsEncrypt verifies domains with a HTTP call to /.well-know. when requesting a LetsEncrypt certificate, our proxies will handle all ACME requests to automatically verify the certificate. To achieve this, the HA-IP must have a HTTP portConfiguration on port 80. When using this, you will also no longer be able to verify your own LetsEncrypt certificates via HA-IP.

         ::: warning

         <i class="fa fa-warning"></i> **Warning**: If your HA-IP does not have a HTTP portconfiguration on port 80, we will ensure it will.
      operationId: Add LetsEncrypt certificate to HA-IP
      parameters:
      - description: The HA-IP name
        example: example-haip
        explode: false
        in: path
        name: haipName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_24'
        content:
          application/json:
            schema:
              example:
                commonName: foobar.example.com
              properties:
                commonName:
                  description: The domain name that the SSL certificate is added to.
                    Start with ‘*.’ when the certificate is a wildcard
                  type: string
              type: object
      responses:
        "201":
          description: Created
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: The domain 'foo.bar' could not be found in your account
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: commonName '*.jemoeder.nl' is invalid as it cannot be managed,
                      the domain should be part of your account
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' has an action running, no modification
                      is allowed
          description: Conflict
      security:
      - oauth2: []
      summary: Add LetsEncrypt certificate to HA-IP
      tags:
      - HA-IP
  /haips/{haipName}/certificates/{certificateId}:
    delete:
      description: Delete a specific HA-IP by name.
      operationId: Detach a certificate from this HA-IP
      parameters:
      - description: The HA-IP name
        example: example-haip
        explode: false
        in: path
        name: haipName
        required: true
        schema:
          type: string
        style: simple
      - description: The certificate Id, this is the same identifier as seen on [domain
          ssl](#domains-ssl)
        example: "7548"
        explode: false
        in: path
        name: certificateId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP with name 'example-haip' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' has an action running, no modification
                      is allowed
          description: Conflict
      security:
      - oauth2: []
      summary: Detach a certificate from this HA-IP
      tags:
      - HA-IP
  /haips/{haipName}/ip-addresses:
    delete:
      description: |-
        Detach all IPs from HA-IP.

        Removing the last IP from HA-IP will also delete all port configurations.
      operationId: Detach all IPs from HA-IP
      parameters:
      - description: The HA-IP name
        example: example-haip
        explode: false
        in: path
        name: haipName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP with name 'example-haip' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' has an action running, no modification
                      is allowed
          description: Conflict
      security:
      - oauth2: []
      summary: Detach all IPs from HA-IP
      tags:
      - HA-IP
    get:
      description: This method will return a list of currently attached IP addresses.
      operationId: List all IPs attached to a HA-IP
      parameters:
      - description: The HA-IP name
        example: example-haip
        explode: false
        in: path
        name: haipName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ipAddresses:
                    - 149.13.3.7
                    - 149.31.33.7
              schema:
                $ref: '#/components/schemas/inline_response_200_25'
          description: OK
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP with name 'example-haip' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Actions on HA-IP 'example-haip' are temporary disabled
          description: Conflict
      security:
      - oauth2: []
      summary: List all IPs attached to a HA-IP
      tags:
      - HA-IP
    put:
      description: |-
        Replace or attach IPs for HA-IP.

        Only your transip VPS IPs are allowed.

        When load balancing is enabled, multiple VPSes can be attached to HA-IP.
         If load balancing is not enabled, the current attached IP (if any) will be replaced with the first provided IP.
      operationId: Set HA-IP attached IP addresses
      parameters:
      - description: The HA-IP name
        example: example-haip
        explode: false
        in: path
        name: haipName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_25'
        content:
          application/json:
            schema:
              example:
                ipAddresses:
                - 149.13.3.7
                - 149.31.33.7
              properties:
                ipAddresses:
                  description: Set of IP addresses to attach, replaces the current
                    set of IP addresses
                  type: array
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP basic product allows only one attached IP address
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP with name 'example-haip' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: IP address 'test-ip-123' is not a valid IPV4 or IPV6 address
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' has an action running, no modification
                      is allowed
          description: Conflict
      security:
      - oauth2: []
      summary: Set HA-IP attached IP addresses
      tags:
      - HA-IP
  /haips/{haipName}/port-configurations:
    get:
      description: This method will return a list of all port configuration on the
        given HA-IP.
      operationId: List all HA-IP port configurations
      parameters:
      - description: The HA-IP name
        example: example-haip
        explode: false
        in: path
        name: haipName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    portConfigurations:
                    - endpointSslMode: "off"
                      id: 9865
                      mode: http
                      name: Website Traffic
                      sourcePort: 80
                      targetPort: 80
              schema:
                $ref: '#/components/schemas/inline_response_200_26'
          description: OK
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP with name 'example-haip' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Actions on HA-IP 'example-haip' are temporary disabled
          description: Conflict
      security:
      - oauth2: []
      summary: List all HA-IP port configurations
      tags:
      - HA-IP
    post:
      description: |-
        Add ports to HA-IP to route to your attached IP address(es)

        Mode options:

        - **http** appends a X-Forwarded-For header to HTTP requests with the original remote IP;

        - **https** same as HTTP, with SSL Certificate offloading;

        - **tcp** plain TCP forward to your attached IP address(es);

        - **proxy** proxy protocol is also a way to retain the original remote IP, but also works for non HTTP traffic (note: the receiving application has to support this).

         Endpoint SSL mode options:

        - **off** no SSL connection is established between our load balancers and your attached IP address(es);

        - **on** an SSL connection is established between our load balancers your attached IP address(es), but the certificate is not validated;

        - **strict** an SSL connection is established between our load balancers your attached IP address(es), and the certificate must signed by a trusted Certificate Authority.
      operationId: Create a port configuration
      parameters:
      - description: The HA-IP name
        example: example-haip
        explode: false
        in: path
        name: haipName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_26'
        content:
          application/json:
            schema:
              example:
                endpointSslMode: "on"
                mode: https
                name: Website Traffic
                sourcePort: 443
                targetPort: 443
              properties:
                endpointSslMode:
                  description: 'The mode determining how traffic between our load
                    balancers and your VPS is protected: ‘off’, ‘on’, ‘strict’'
                  type: string
                mode:
                  description: 'The mode determining how traffic is processed and
                    forwarded: ‘tcp’, ‘http’, ‘https’, ‘proxy’'
                  type: string
                name:
                  description: Name of the port configuration
                  type: string
                sourcePort:
                  description: The port at which traffic arrives on your HA-IP
                  type: number
                targetPort:
                  description: The port at which traffic arrives on your attached
                    IP address(es)
                  type: number
              type: object
      responses:
        "201":
          description: Created
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP with name 'example-haip' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: sourcePort '25' is not unique, there is already a PortConfiguration
                      using this sourcePort port
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' has an action running, no modification
                      is allowed
          description: Conflict
      security:
      - oauth2: []
      summary: Create a port configuration
      tags:
      - HA-IP
  /haips/{haipName}/port-configurations/{portConfigurationId}:
    delete:
      description: Remove a port configuration by id.
      operationId: Remove port configuration
      parameters:
      - description: The HA-IP name
        example: example-haip
        explode: false
        in: path
        name: haipName
        required: true
        schema:
          type: string
        style: simple
      - description: The port configuration Id
        example: "7548"
        explode: false
        in: path
        name: portConfigurationId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP PortConfiguration with id '1337' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' has an action running, no modification
                      is allowed
          description: Conflict
      security:
      - oauth2: []
      summary: Remove port configuration
      tags:
      - HA-IP
    get:
      description: This method will return information about a specific port configuration.
      operationId: Get info about a specific PortConfiguration
      parameters:
      - description: The HA-IP name
        example: example-haip
        explode: false
        in: path
        name: haipName
        required: true
        schema:
          type: string
        style: simple
      - description: The port configuration Id
        example: "7548"
        explode: false
        in: path
        name: portConfigurationId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    portConfiguration:
                      endpointSslMode: "off"
                      id: 9865
                      mode: http
                      name: Website Traffic
                      sourcePort: 80
                      targetPort: 80
              schema:
                $ref: '#/components/schemas/inline_response_200_27'
          description: OK
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP PortConfiguration with id '1337' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Actions on HA-IP 'example-haip' are temporary disabled
          description: Conflict
      security:
      - oauth2: []
      summary: Get info about a specific PortConfiguration
      tags:
      - HA-IP
    put:
      description: |-
        Update the `name`, `sourcePort`, `targetPort`, `mode`, or `endpointSslMode` for a specific port configuration.

        Mode options (`mode`):

        - **http** appends a X-Forwarded-For header to HTTP requests with the original remote IP;

        - **https** same as HTTP, with SSL Certificate offloading;

        - **tcp** plain TCP forward to your VPS;

        - **proxy** proxy protocol is also a way to retain the original remote IP, but also works for non HTTP traffic (note: the receiving application has to support this).

         Endpoint SSL mode options (`endpointSslMode`):

        - **off** no SSL connection is established between our load balancers and your VPS;

        - **on** an SSL connection is established between our load balancers your VPS, but the certificate is not validated;

        - **strict** an SSL connection is established between our load balancers your VPS, and the certificate must signed by a trusted Certificate Authority.
      operationId: Update a port configuration
      parameters:
      - description: The HA-IP name
        example: example-haip
        explode: false
        in: path
        name: haipName
        required: true
        schema:
          type: string
        style: simple
      - description: The port configuration Id
        example: "7548"
        explode: false
        in: path
        name: portConfigurationId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_27'
        content:
          application/json:
            schema:
              example:
                portConfiguration:
                  endpointSslMode: "off"
                  id: 9865
                  mode: http
                  name: Website Traffic
                  sourcePort: 80
                  targetPort: 80
              properties:
                portConfiguration:
                  $ref: '#/components/schemas/inline_response_200_27_portConfiguration'
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP PortConfiguration with id '75' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: sourcePort '1337' is not unique, there is already a PortConfiguration
                      using this sourcePort port
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' has an action running, no modification
                      is allowed
          description: Conflict
      security:
      - oauth2: []
      summary: Update a port configuration
      tags:
      - HA-IP
  /haips/{haipName}/status-reports:
    get:
      description: The result contains a report per attached IP address, IP version,
        port and load balancer.
      operationId: Get a full status report for a HA-IP
      parameters:
      - description: The HA-IP name
        example: example-haip
        explode: false
        in: path
        name: haipName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    statusReport:
                    - ipAddress: 136.10.14.1
                      ipVersion: 4
                      lastChange: 2019-09-29 16:51:18
                      loadBalancerIp: 136.144.151.255
                      loadBalancerName: lb0
                      port: 80
                      state: up
              schema:
                $ref: '#/components/schemas/inline_response_200_28'
          description: OK
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP 'example-haip' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: HA-IP with name 'example-haip' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Actions on HA-IP 'example-haip' are temporary disabled
          description: Conflict
      security:
      - oauth2: []
      summary: Get a full status report for a HA-IP
      tags:
      - HA-IP
  /invoices:
    get:
      description: |-
        Returns a list of all invoices attached to your TransIP account.

        ::: note

        This method supports pagination, using this method you can limit the amount of invoices returned by the api, which might be useful if you expect a lot of response objects and you want to spread that over to multiple requests. See the [documentation on pages](#header-pages) for more information on how to use this functionality.
      operationId: List all invoices
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    invoices:
                    - creationDate: 2020-01-01
                      currency: EUR
                      dueDate: 2020-02-01
                      invoiceNumber: F0000.1911.0000.0004
                      invoiceStatus: waitsforpayment
                      payDate: 2020-01-01
                      totalAmount: 1000
                      totalAmountInclVat: 1240
              schema:
                $ref: '#/components/schemas/inline_response_200_29'
          description: OK
      security:
      - oauth2: []
      summary: List all invoices
      tags:
      - Account
  /invoices/{invoiceNumber}:
    get:
      description: Returns only the requested invoice.
      operationId: List a single invoice
      parameters:
      - description: The Invoice number
        example: F0000.1911.0000.0004
        explode: false
        in: path
        name: invoiceNumber
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    invoice:
                      creationDate: 2020-01-01
                      currency: EUR
                      dueDate: 2020-02-01
                      invoiceNumber: F0000.1911.0000.0004
                      invoiceStatus: waitsforpayment
                      payDate: 2020-01-01
                      totalAmount: 1000
                      totalAmountInclVat: 1240
              schema:
                $ref: '#/components/schemas/inline_response_200_30'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Invoice with number 'F0000.1911.0000.0004' not found
          description: Not Found
      security:
      - oauth2: []
      summary: List a single invoice
      tags:
      - Account
  /invoices/{invoiceNumber}/invoice-items:
    get:
      description: |-
        Each invoice consists of one or multiple invoice items, detailing what specific products or services are on this invoice.

        An invoiceItem can optionally contain one or multiple discounts.
      operationId: List invoice items by InvoiceNumber
      parameters:
      - description: The Invoice number
        example: F0000.1911.0000.0004
        explode: false
        in: path
        name: invoiceNumber
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    invoiceItems:
                    - date: 2020-01-01
                      description: Big Storage Disk 2000 GB (example-bigstorage)
                      discounts:
                      - amount: -500
                        description: Korting (20% Black Friday)
                      isRecurring: false
                      price: 1000
                      priceInclVat: 1210
                      product: Big Storage Disk 2000 GB
                      quantity: 1
                      vat: 210
                      vatPercentage: 21
              schema:
                $ref: '#/components/schemas/inline_response_200_31'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Invoice with number 'F0000.1911.0000.0004' not found
          description: Not Found
      security:
      - oauth2: []
      summary: List invoice items by InvoiceNumber
      tags:
      - Account
  /invoices/{invoiceNumber}/pdf:
    get:
      description: |-
        Retrieve the PDF data of an invoice with the given invoice number.

        The response returns a string that is  Base64 encoded. Decode this string before saving to a PDF file.
      operationId: Retrieve an invoice as PDF file
      parameters:
      - description: The Invoice number
        example: F0000.1911.0000.0004
        explode: false
        in: path
        name: invoiceNumber
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    pdf: Y205elpYTWdZWEpsSUhKbFpDd2dabXh2ZDJWeWN5QmhjbVVnWW14MVpTd2dkR2hsY21VZ2MyaHZkV3hrSUdKbElHRWdjR1JtSUdobGNtVWdZblYwSUdsMElHbHpJR2RzZFdVdQ===
              schema:
                $ref: '#/components/schemas/inline_response_200_32'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Invoice with number 'F0000.1911.0000.0004' not found
          description: Not Found
      security:
      - oauth2: []
      summary: Retrieve an invoice as PDF file
      tags:
      - Account
  /mail-service:
    get:
      description: |-
        You’re able to gather detailed information regarding mail service usage and credentials using this API call.

        Aside from the credentials (username and password) returned objects also include current usage and quota.
         Usage means the amount of emails sent using the credentials and the quota is the amount of emails allowed to be sent daily.
         **Usage** will always be lower than **quota**. The quota is determined by the amount of VPSes in your account. Every VPS adds 1000 mails to your daily quota (with a maximum of 10000).
         E.g.: when you own 5 VPSs, the quota on each VPS is 5000.
      operationId: Get mail service information
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    mailServiceInformation:
                      dnsTxt: 782d28c2fa0b0bdeadf979e7155a83a15632fcddb0149d510c09fb78a470f7d3
                      password: KgDseBsmWJNTiGww
                      quota: 1000
                      usage: 54
                      username: test@vps.transip.email
              schema:
                $ref: '#/components/schemas/inline_response_200_33'
          description: OK
      security:
      - oauth2: []
      summary: Get mail service information
      tags:
      - VPS
    patch:
      description: |-
        The credentials needed to authorize with our SMTP relay servers consist of a username and password.
         In case the password can’t be accessed or should be reset, you can use this API call in order to regenerate it.

        As a TransIP account can only have one mail service account, the request does not need to contain a body.
      operationId: Regenerate mail service password
      responses:
        "204":
          description: No Content
      security:
      - oauth2: []
      summary: Regenerate mail service password
      tags:
      - VPS
    post:
      description: |-
        In order to reduce spam score, several DNS records should be added.
         These records have to match the details generated by the mail platform.
         In case the DNS records don’t match, the Transip relay will not accept mail from your VPS.
         These new records (outlined below) will not overwrite any DNS records.

        Record type | Name                 | TTL       | DNS type | Value
         -----------: | -------------------- | --------- | -------- | -----------------------------------------------------------------
         SPF          | @                    | 5 minutes | TXT      | v=spf1 include:_spf.transip.email ~all
         DKIM         | transip-A._domainkey | 5 minutes | CNAME    | _dkim-A.transip.email.
         DKIM         | transip-B._domainkey | 5 minutes | CNAME    | _dkim-B.transip.email.
         DKIM         | transip-C._domainkey | 5 minutes | CNAME    | _dkim-C.transip.email.
         AUTH         | x-transip-mail-auth  | 5 minutes | TXT      | 30ac13d5d73d181fda11a60f779de4fb1be42908b49fb06e46d53d2d03b5721a
      operationId: Add mail service DNS entries to domains
      requestBody:
        $ref: '#/components/requestBodies/inline_object_28'
        content:
          application/json:
            schema:
              example:
                domainNames:
                - example.com
                - another.com
              properties:
                domainNames:
                  description: The domain names to which the DNS entries should be
                    added
                  type: array
              type: object
      responses:
        "201":
          description: Created
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Domain with id 'another.com' not found
          description: Not Found
      security:
      - oauth2: []
      summary: Add mail service DNS entries to domains
      tags:
      - VPS
  /monitoring-contacts:
    get:
      description: Get a list of all monitoring contacts attached to your TransIP
        account.
      operationId: List all contacts
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    contact:
                      email: j.wick@example.com
                      id: 1
                      name: John Wick
                      telephone: +31612345678
              schema:
                $ref: '#/components/schemas/inline_response_200_34'
          description: OK
      security:
      - oauth2: []
      summary: List all contacts
      tags:
      - VPS
    post:
      description: |-
        Create a monitoring contact in your TransIP account.

        You can later use this contact by adding them to your [TCP Monitor](#vps-tcp-monitoring).
      operationId: Create a contact
      requestBody:
        $ref: '#/components/requestBodies/inline_object_29'
        content:
          application/json:
            schema:
              example:
                email: j.wick@example.com
                name: John Wick
                telephone: +31612345678
              properties:
                email:
                  description: Email address of the contact
                  type: string
                name:
                  description: Name of the contact
                  type: string
                telephone:
                  description: Telephone number of the contact
                  type: string
              type: object
      responses:
        "201":
          description: Created
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Provided email address is invalid
          description: Not Acceptable
      security:
      - oauth2: []
      summary: Create a contact
      tags:
      - VPS
  /monitoring-contacts/{contactId}:
    delete:
      description: Permanently deletes a monitoring contact from your TransIP account.
      operationId: Delete a contact
      parameters:
      - description: Id number of the contact
        example: "1"
        explode: false
        in: path
        name: contactId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Contact with id '123' not found
          description: Not Found
      security:
      - oauth2: []
      summary: Delete a contact
      tags:
      - VPS
    put:
      description: Updates a specified contact. This call will override existing fields.
      operationId: Update a contact
      parameters:
      - description: Id number of the contact
        example: "1"
        explode: false
        in: path
        name: contactId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_30'
        content:
          application/json:
            schema:
              example:
                contact:
                  email: j.wick@example.com
                  id: 1
                  name: John Wick
                  telephone: +31612345678
              properties:
                contact:
                  $ref: '#/components/schemas/inline_response_200_34_contact'
              type: object
      responses:
        "204":
          description: No Content
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Contact with id '123' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Provided email address is invalid
          description: Not Acceptable
      security:
      - oauth2: []
      summary: Update a contact
      tags:
      - VPS
  /private-networks:
    get:
      description: |-
        List all private networks in your account.

        Should you only want to get the private networks attached to a specific VPS, set the `vpsName` parameter and only attached private networks will be shown like https://api.transip.nl/v6/private-networks?vpsName=example-vps

        If this parameter is not set, all private networks will be listed along with the VPSes it’s attached to.

        ::: note

        This method supports pagination, using this methods you can limit the amount of private networks returned by the api, which might be usefull if you expect a lot of response objects and you want to spread that over multiple requests. See the [documentation on pages](#header-pages) for more information on how to use this functionality.
      operationId: List all private networks
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Filter private networks by a given VPS
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    privateNetworks:
                    - description: FilesharingNetwork
                      isBlocked: false
                      isLocked: false
                      name: example-privatenetwork
                      vpsNames:
                      - example-vps
                      - example-vps2
              schema:
                $ref: '#/components/schemas/inline_response_200_35'
          description: OK
      security:
      - oauth2: []
      summary: List all private networks
      tags:
      - VPS
    post:
      description: |-
        Order a new private network. After ordering a private network you’re able to attach it to a VPS t o make use of the private network.

        ::: warning

        <i class="fa fa-warning"></i> **Warning**: This API call will create an invoice!
      operationId: Order a new private network
      requestBody:
        $ref: '#/components/requestBodies/inline_object_31'
        content:
          application/json:
            schema:
              example: {}
              properties:
                description:
                  type: string
              type: object
      responses:
        "201":
          description: Created
      security:
      - oauth2: []
      summary: Order a new private network
      tags:
      - VPS
  /private-networks/{privateNetworkName}:
    delete:
      description: |-
        Cancel a private network.

        You can set the `endTime` attribute to `end` or `immediately`, this has the following implications:

        * **end**: The private network will be terminated from the end date of the agreement as can be found in the applicable quote;

        * **immediately**: The private network will be terminated immediately.
      operationId: Cancel a private network
      parameters:
      - description: Name of the private network
        example: example-privatenetwork
        explode: false
        in: path
        name: privateNetworkName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_33'
        content:
          application/json:
            schema:
              example:
                endTime: end
              properties:
                endTime:
                  description: Cancellation time, either 'end' (default) or 'immediately'
                  type: string
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: PrivateNetwork 'example-privatenetwork' is blocked, no
                      modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: PrivateNetwork with name 'example-privatenetwork' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid cancellation time: ''now'', please
                      use either ''end'' or ''immediately'''
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: The PrivateNetwork 'example-privatenetwork' is already
                      locked to another action
          description: Conflict
      security:
      - oauth2: []
      summary: Cancel a private network
      tags:
      - VPS
    get:
      description: Gather detailed information about a private network. As one of
        the returned attributes includes an array of the VPSes it’s attached to, you
        can determine if the private network is already attached to a specific VPS
        and if not, you can attach it.
      operationId: Get private network by name
      parameters:
      - description: Name of the private network
        example: example-privatenetwork
        explode: false
        in: path
        name: privateNetworkName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    privateNetwork:
                      description: FilesharingNetwork
                      isBlocked: false
                      isLocked: false
                      name: example-privatenetwork
                      vpsNames:
                      - example-vps
                      - example-vps2
              schema:
                $ref: '#/components/schemas/inline_response_200_36'
          description: OK
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: PrivateNetwork 'example-privatenetwork' is blocked, no
                      modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: PrivateNetwork with name 'example-privatenetwork' not found
          description: Not Found
      security:
      - oauth2: []
      summary: Get private network by name
      tags:
      - VPS
    patch:
      description: Detach VPSes from the private network one at a time. Send a PATCH
        request with the `action` attribute set to `removevps`.
      operationId: Detach vps from privateNetwork
      parameters:
      - description: Name of the private network
        example: example-privatenetwork
        explode: false
        in: path
        name: privateNetworkName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_34'
        content:
          application/json:
            schema:
              example:
                action: detachvps
                vpsName: example-vps
              properties:
                action:
                  type: string
                vpsName:
                  description: Name of the vps that you want to detach
                  type: string
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Actions on VPS 'example-vps' are temporary disabled
          description: Conflict
      security:
      - oauth2: []
      summary: Detach vps from privateNetwork
      tags:
      - VPS
    put:
      description: This method can also be used to change the `description` attribute.
        The description can be maximum 32 character longs
      operationId: Update private network
      parameters:
      - description: Name of the private network
        example: example-privatenetwork
        explode: false
        in: path
        name: privateNetworkName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_32'
        content:
          application/json:
            schema:
              example:
                privateNetwork:
                  description: FilesharingNetwork
                  isBlocked: false
                  isLocked: false
                  name: example-privatenetwork
                  vpsNames:
                  - example-vps
                  - example-vps2
              properties:
                privateNetwork:
                  $ref: '#/components/schemas/_private_networks__privateNetworkName__privateNetwork'
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: PrivateNetwork 'example-privatenetwork' is blocked, no
                      modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: PrivateNetwork with name 'example-privatenetwork' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: The provided parameter 'verylongdescriptionthatwouldnotfit'
                      can be 32 characters maximum
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: The PrivateNetwork 'example-privatenetwork' is already
                      locked to another action
          description: Conflict
      security:
      - oauth2: []
      summary: Update private network
      tags:
      - VPS
  /products:
    get:
      description: |-
        This endpoint returns a list of products with their name, description and price.

        These product names can be used upon creating certain resources as it specifies which type of that resource you would like, for example, a certain type of HA-IP or Vps.
      operationId: List all products
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    products:
                      bigStorage:
                      - description: This is an example product
                        name: example-product-name
                        price: 499
                        recurringPrice: 799
                      haip:
                      - description: This is an example product
                        name: example-product-name
                        price: 499
                        recurringPrice: 799
                      privateNetworks:
                      - description: This is an example product
                        name: example-product-name
                        price: 499
                        recurringPrice: 799
                      vps:
                      - description: This is an example product
                        name: example-product-name
                        price: 499
                        recurringPrice: 799
                      vpsAddon:
                      - description: This is an example product
                        name: example-product-name
                        price: 499
                        recurringPrice: 799
              schema:
                $ref: '#/components/schemas/inline_response_200_37'
          description: OK
      security:
      - oauth2: []
      summary: List all products
      tags:
      - General
  /products/{productName}/elements:
    get:
      description: |-
        Get the specifications for a product.

        This will list all the different elements for a product with the amount that it comes with. e.g. a `vps-bladevps-x4` has 2 CPU-core elements.
      operationId: List specifications for product
      parameters:
      - description: Product
        example: vps-bladevps-x4
        explode: false
        in: path
        name: productName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    productElements:
                    - amount: 1
                      description: amount of ipv4Addresses for a vps
                      name: ipv4Addresses
              schema:
                $ref: '#/components/schemas/inline_response_200_38'
          description: OK
      security:
      - oauth2: []
      summary: List specifications for product
      tags:
      - General
  /tlds:
    get:
      description: This method will return a list of all available TLDs currently
        offered by TransIP.
      operationId: List all TLDs
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    tlds:
                    - capabilities:
                      - canRegister
                      maxLength: 63
                      minLength: 2
                      name: .nl
                      price: 399
                      recurringPrice: 749
                      registrationPeriodLength: 12
              schema:
                $ref: '#/components/schemas/inline_response_200_39'
          description: OK
      security:
      - oauth2: []
      summary: List all TLDs
      tags:
      - Domains
  /tlds/{tld}:
    get:
      description: Get information about a specific TLD. General details such as price,
        renewal price and minimum registration length are outlined in the output.
      operationId: Get info for a TLD
      parameters:
      - description: Top Level Domain.
        example: .nl
        explode: false
        in: path
        name: tld
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    tld:
                      capabilities:
                      - canRegister
                      maxLength: 63
                      minLength: 2
                      name: .nl
                      price: 399
                      recurringPrice: 749
                      registrationPeriodLength: 12
              schema:
                $ref: '#/components/schemas/inline_response_200_40'
          description: OK
      security:
      - oauth2: []
      summary: Get info for a TLD
      tags:
      - Domains
  /traffic:
    get:
      description: All the traffic of your VPSes combined, overusage will also be
        billed based on this information.
      operationId: Get traffic pool information
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    trafficInformation:
                      endDate: 2019-07-22
                      maxInBytes: 1073741824000
                      startDate: 2019-06-22
                      usedInBytes: 7860253754
                      usedTotalBytes: 11935325369
              schema:
                $ref: '#/components/schemas/inline_response_200_41'
          description: OK
      security:
      - oauth2: []
      summary: Get traffic pool information
      tags:
      - VPS
  /traffic/{vpsName}:
    get:
      description: Traffic information for a specific VPS can be retrieved using this
        API call. Statistics such as consumed bandwidth and network usage statistics
        are classified as traffic information.
      operationId: Get traffic information for a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    trafficInformation:
                      endDate: 2019-07-22
                      maxInBytes: 1073741824000
                      startDate: 2019-06-22
                      usedInBytes: 7860253754
                      usedTotalBytes: 11935325369
              schema:
                $ref: '#/components/schemas/inline_response_200_41'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
      security:
      - oauth2: []
      summary: Get traffic information for a VPS
      tags:
      - VPS
  /vps:
    get:
      description: |-
        Returns a list of all VPSs in the TransIP account.

        ::: note

        This method supports pagination, using this methods you can limit the amount of VPSs returned by the api, which might be usefull if you expect a lot of response objects and you want to spread that over multiple requests. See the [documentation on pages](#header-pages) for more information on how to use this functionality.
      operationId: List all VPSs
      requestBody:
        $ref: '#/components/requestBodies/List_all_domainsTags'
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    vpss:
                    - tags:
                      - customTag
                      - anotherTag
                      availabilityZone: ams0
                      cpus: 2
                      currentSnapshots: 1
                      description: example VPS
                      diskSize: 157286400
                      ipAddress: 37.97.254.6
                      isBlocked: false
                      isCustomerLocked: false
                      isLocked: false
                      macAddress: 52:54:00:3b:52:65
                      maxSnapshots: 10
                      memorySize: 4194304
                      name: example-vps
                      operatingSystem: ubuntu-18.04
                      productName: vps-bladevps-x1
                      status: running
              schema:
                $ref: '#/components/schemas/inline_response_200_42'
          description: OK
      security:
      - oauth2: []
      summary: List all VPSs
      tags:
      - VPS
    post:
      description: |-
        Use this API call in order to clone an existing VPS. There are a few things to take into account when you want to clone an existing VPS to a new VPS:

        * If the original VPS (which you’re going to clone) is currently locked, the clone will fail;

        * Cloned control panels can be used on the VPS, but as the IP address changes, this does require you to synchronise the new license on the new VPS (licenses are often IP-based);

        * Possibly, your VPS has its network interface(s) configured using (a) static IP(‘s) rather than a dynamic allocation using DHCP. If this is the case, you have to configure the new IP(‘s) on the new VPS. Do note that this is not the case with our pre-installed control panel images;

        * VPS add-ons such as Big Storage aren’t affected by cloning - these will stay attached to the original VPS and can’t be swapped automatically

         ::: warning

         <i class="fa fa-warning"></i> **Warning**: As cloning is a paid service, an invoice will be generated
      operationId: Clone a VPS
      requestBody:
        $ref: '#/components/requestBodies/inline_object_35'
        content:
          application/json:
            schema:
              example:
                availabilityZone: ams0
                vpsName: example-vps
              properties:
                availabilityZone:
                  description: The name of the availability zone where the clone should
                    be created
                  type: string
                vpsName:
                  description: The vps name of the VPS to clone.
                  type: string
              type: object
      responses:
        "201":
          description: Created
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Actions on VPS 'example-vps' are temporary disabled
          description: Conflict
      security:
      - oauth2: []
      summary: Clone a VPS
      tags:
      - VPS
  /vps/{vpsName}:
    delete:
      description: |-
        Using the DELETE method on a VPS will cancel the VPS, thus deleting it.

        Upon cancellation This will wipe all data on the VPS and permanently destroy it.

        You can set the `endTime` attribute to 'end' or 'immediately', this has the following implications:

        * **end**: The VPS will be terminated from the end date of the agreement as can be found in the applicable quote;

        * **immediately**: The VPS will be terminated immediately.
      operationId: Cancel a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_37'
        content:
          application/json:
            schema:
              example:
                endTime: end
              properties:
                endTime:
                  description: Cancellation time, either 'end' (default) or 'immediately'
                  type: string
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid cancellation time: ''now'', please
                      use either ''end'' or ''immediately'''
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is customer locked, no modification is
                      allowed
          description: Conflict
      security:
      - oauth2: []
      summary: Cancel a VPS
      tags:
      - VPS
    get:
      description: |-
        Get information on specific VPS by name.

        **Note**: for `vpsName`, use the TransIP provided name (format: username-vpsXX).
      operationId: Get VPS by name
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    vps:
                      tags:
                      - customTag
                      - anotherTag
                      availabilityZone: ams0
                      cpus: 2
                      currentSnapshots: 1
                      description: example VPS
                      diskSize: 157286400
                      ipAddress: 37.97.254.6
                      isBlocked: false
                      isCustomerLocked: false
                      isLocked: false
                      macAddress: 52:54:00:3b:52:65
                      maxSnapshots: 10
                      memorySize: 4194304
                      name: example-vps
                      operatingSystem: ubuntu-18.04
                      productName: vps-bladevps-x1
                      status: running
              schema:
                $ref: '#/components/schemas/inline_response_200_43'
          description: OK
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
      security:
      - oauth2: []
      summary: Get VPS by name
      tags:
      - VPS
    patch:
      description: |-
        Handover a VPS to another TransIP Account. This call will initiate the handover process. the actual handover will be done when the target customer accepts the handover.

        Note: the VPS will be shut down in order to handover.
      operationId: Handover a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_38'
        content:
          application/json:
            schema:
              example:
                action: handover
                targetCustomerName: example2
              properties:
                action:
                  type: string
                targetCustomerName:
                  type: string
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Target user 'example2' does not exist
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Target user 'example2' is not capable of receiving handover
          description: Conflict
      security:
      - oauth2: []
      summary: Handover a VPS
      tags:
      - VPS
    put:
      description: |-
        In this API call you can lock/unlock a VPS, update VPS description, and add/remove tags.

        ### Locking a VPS

        Locking a VPS prevents accidental execution of API calls and manual actions through the control panel.

        For locking the VPS, set `isCustomerLocked` to `true`. Set the value to `false` for unlocking the VPS.

        ### Change a VPS description

        You can change your VPS description by simply changing the `description` attribute. Note that the identifier key `name` will not be changed. The description can be maximum 32 character longs

        ### VPS Tags

        To add/remove tags, you must update the `tags` attribute. Every time you make a call with a changed tags attribute, the existing tags are overridden.
      operationId: Update a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_36'
        content:
          application/json:
            schema:
              example:
                vps:
                  tags:
                  - customTag
                  - anotherTag
                  availabilityZone: ams0
                  cpus: 2
                  currentSnapshots: 1
                  description: example VPS
                  diskSize: 157286400
                  ipAddress: 37.97.254.6
                  isBlocked: false
                  isCustomerLocked: false
                  isLocked: false
                  macAddress: 52:54:00:3b:52:65
                  maxSnapshots: 10
                  memorySize: 4194304
                  name: example-vps
                  operatingSystem: ubuntu-18.04
                  productName: vps-bladevps-x1
                  status: running
              properties:
                vps:
                  $ref: '#/components/schemas/_vps__vpsName__vps'
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: The provided parameter 'verylongdescriptionthatwouldnotfit'
                      can be 32 characters maximum
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is customer locked, no modification is
                      allowed
          description: Conflict
      security:
      - oauth2: []
      summary: Update a VPS
      tags:
      - VPS
  /vps/{vpsName}/addons:
    get:
      description: This method will return all active, cancelable and available add-ons
        for a VPS.
      operationId: List addons for a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    addons:
                      active:
                      - description: This is an example product
                        name: example-product-name
                        price: 499
                        recurringPrice: 799
                      available:
                      - description: This is an example product
                        name: example-product-name
                        price: 499
                        recurringPrice: 799
                      cancellable:
                      - description: This is an example product
                        name: example-product-name
                        price: 499
                        recurringPrice: 799
              schema:
                $ref: '#/components/schemas/inline_response_200_44'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
      security:
      - oauth2: []
      summary: List addons for a VPS
      tags:
      - VPS
    post:
      description: |-
        In order to extend a specific VPS with add-ons, use this API call.

        The type of add-ons that can be ordered range from extra IP addresses to hardware add-ons such as an extra core or additional SSD disk space.

        ::: warning

        <i class="fa fa-warning"></i> **Warning**: This API call will create a new invoice for the specified add-on(s)
      operationId: Order addons for a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_39'
        content:
          application/json:
            schema:
              example:
                addons:
                - vps-addon-1-extra-ip-address
              properties:
                addons:
                  description: Addons to be added
                  type: array
              type: object
      responses:
        "201":
          description: Created
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS product addon 'example-addon' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Actions on VPS 'example-vps' are temporary disabled
          description: Conflict
      security:
      - oauth2: []
      summary: Order addons for a VPS
      tags:
      - VPS
  /vps/{vpsName}/addons/{addonName}:
    delete:
      description: By using this API call, you can cancel an add-on by name, specifying
        the VPS name as well. Due to technical restrictions (possible dataloss) storage
        add-ons cannot be cancelled.
      operationId: Cancel an addon for a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      - description: Addon name
        example: vpsAddon-1-extra-ip-address
        explode: false
        in: path
        name: addonName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Actions on VPS 'example-vps' are temporary disabled
          description: Conflict
      security:
      - oauth2: []
      summary: Cancel an addon for a VPS
      tags:
      - VPS
  /vps/{vpsName}/backups:
    get:
      description: TransIP offers multiple backup types, every VPS has 4 hourly backups
        by default, weekly backups are available for a small fee. This API call returns
        backups for both types.
      operationId: List backups for a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    backups:
                    - availabilityZone: ams0
                      dateTimeCreate: 2019-11-29 22:11:20
                      diskSize: 157286400
                      id: 712332
                      operatingSystem: Ubuntu 19.10
                      status: active
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: OK
      security:
      - oauth2: []
      summary: List backups for a VPS
      tags:
      - VPS
  /vps/{vpsName}/backups/{backupId}:
    patch:
      description: |-
        With this API call you can convert a backup to a snapshot for the VPS.

        In case the creation of this snapshot leads to exceeding the maximum allowed snapshots, the API call will return an error and the snapshot will not be created please order extra snapshots before proceeding.

        To convert a backup to a VPS snapshot, send a PATCH request with the `action` attribute set to `convert`.
      operationId: Convert backup to snapshot
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the backup
        example: "712332"
        explode: false
        in: path
        name: backupId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_40'
        content:
          application/json:
            schema:
              example:
                action: convert
                description: BeforeItsAllBroken
              properties:
                action:
                  type: string
                description:
                  type: string
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Snapshot limit reached
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Actions on Backup '123' are temporary disabled
          description: Conflict
      security:
      - oauth2: []
      summary: Convert backup to snapshot
      tags:
      - VPS
  /vps/{vpsName}/firewall:
    get:
      description: |-
        The VPS firewall works as a whitelist stateful firewall for **incoming** traffic. Enable the Firewall to block everything, add rules to exclude certain traffic from being blocked.

        To further filter traffic, IP's can be whitelisted per rule. when no whitelist has been given for a specific rule, all traffic is allowed to this port.
      operationId: List firewall for a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    vpsFirewall:
                      isEnabled: true
                      ruleSet:
                      - description: HTTP
                        endPort: 80
                        protocol: tcp
                        startPort: 80
                        whitelist:
                        - 80.69.69.80/32
                        - 80.69.69.100/32
                        - 2a01:7c8:3:1337::1/128
              schema:
                $ref: '#/components/schemas/inline_response_200_45'
          description: OK
      security:
      - oauth2: []
      summary: List firewall for a VPS
      tags:
      - VPS
    put:
      description: |-
        Update the ruleset for a VPS. This will override all current rules set for this VPS.

        The VPS Firewall works as a whitelist. when no entries are given, but the firewall is enabled. All **incoming** traffic will be blocked.
         IP's or IP Ranges (v4/v6) can be whitelisted per rule. When no whitelist has been given for a specific rule, all incoming traffic is allowed to this port.

        Protocol parameter can either be `tcp`, `udp` or `tcp_udp`.
         There is a maximum of 50 rules with each a maximum of 20 whitelist entries.

        Any change to the firewall will temporary lock the VPS while the new rules are being applied.
      operationId: Update firewall for a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_41'
        content:
          application/json:
            schema:
              example:
                vpsFirewall:
                  isEnabled: true
                  ruleSet:
                  - description: HTTP
                    endPort: 80
                    protocol: tcp
                    startPort: 80
                    whitelist:
                    - 80.69.69.80/32
                    - 80.69.69.100/32
                    - 2a01:7c8:3:1337::1/128
              properties:
                vpsFirewall:
                  $ref: '#/components/schemas/_vps__vpsName__firewall_vpsFirewall'
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: The provided parameter 'protocol' can only be one of the
                      following value's 'tcp,udp,tdp_udp'
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' has an action running, no modification
                      is allowed
          description: Conflict
      security:
      - oauth2: []
      summary: Update firewall for a VPS
      tags:
      - VPS
  /vps/{vpsName}/ip-addresses:
    get:
      description: This API call will return all IPv4 and IPv6 addresses attached
        to the VPS including Relevant network information like the gateway and subnet
        mask.
      operationId: List IP addresses for a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ipAddresses:
                    - address: 37.97.254.6
                      dnsResolvers:
                      - 195.8.195.8
                      - 195.135.195.135
                      gateway: 37.97.254.1
                      reverseDns: example.com
                      subnetMask: 255.255.255.0
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
          description: OK
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
      security:
      - oauth2: []
      summary: List IP addresses for a VPS
      tags:
      - VPS
    post:
      description: |-
        TransIP VPSes are deployed with an `/64` IPv6 range. In order to set ReverseDNS for specific ipv6 addresses, you will have to add the IPv6 address via this command.

        After adding an IPv6 address, you can set the reverse DNS for this address using the [Update Reverse DNS](#vps-ip-addresses-put) API call.
      operationId: Add IPv6 address to a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_42'
        content:
          application/json:
            schema:
              example:
                ipAddress: 2a01:7c8:3:1337::6
              properties:
                ipAddress:
                  type: string
              type: object
      responses:
        "201":
          description: Created
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: IP address '2a01:7c8:3:1337::6' is not in the VPS ipv6
                      Range
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: IP address '2a01:7c8:3:1337::6' already exists
          description: Conflict
      security:
      - oauth2: []
      summary: Add IPv6 address to a VPS
      tags:
      - VPS
  /vps/{vpsName}/ip-addresses/{ipAddress}:
    delete:
      description: |-
        This method allows you to remove specific IPv6 addresses from the registered list of IPv6 addresses within the VPS's `/64` IPv6 range.

        Note that deleting an IP address will also wipe its reverse DNS information.
      operationId: Remove an IPv6 address from a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      - description: The IP address of the VPS
        example: 37.97.254.6
        explode: false
        in: path
        name: ipAddress
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: IP address '8.8.8.8' is not found on VPS 'example-vps'
          description: Not Found
      security:
      - oauth2: []
      summary: Remove an IPv6 address from a VPS
      tags:
      - VPS
    get:
      description: Only return network information for the specified IP address.
      operationId: Get IP address info by address
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      - description: The IP address of the VPS
        example: 37.97.254.6
        explode: false
        in: path
        name: ipAddress
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ipAddress:
                      address: 37.97.254.6
                      dnsResolvers:
                      - 195.8.195.8
                      - 195.135.195.135
                      gateway: 37.97.254.1
                      reverseDns: example.com
                      subnetMask: 255.255.255.0
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
          description: OK
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: IP address '8.8.8.8' is not found on VPS 'example-vps'
          description: Not Found
      security:
      - oauth2: []
      summary: Get IP address info by address
      tags:
      - VPS
    put:
      description: Reverse DNS for IPv4 addresses as well as IPv6 addresses can be
        updated using this API call.
      operationId: Update reverse DNS for a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      - description: The IP address of the VPS
        example: 37.97.254.6
        explode: false
        in: path
        name: ipAddress
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_43'
        content:
          application/json:
            schema:
              example:
                ipAddress:
                  address: 37.97.254.6
                  dnsResolvers:
                  - 195.8.195.8
                  - 195.135.195.135
                  gateway: 37.97.254.1
                  reverseDns: example.com
                  subnetMask: 255.255.255.0
              properties:
                ipAddress:
                  $ref: '#/components/schemas/_colocations__colocationName__ip_addresses__ipAddress__ipAddress'
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: IP address '8.8.8.8' is not found on VPS 'example-vps'
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'This is not a valid hostname: ''test&@*#'''
          description: Not Acceptable
      security:
      - oauth2: []
      summary: Update reverse DNS for a VPS
      tags:
      - VPS
  /vps/{vpsName}/operating-systems:
    get:
      description: |-
        TransIP offers a number of operating systems and preinstalled images ready to be installed on any VPS. Using this API call, you can get a list of operating systems and preinstalled images available.

        Commercial operating systems (such as Windows Server editions) and images shipping a commercial control panel contain the ‘price’ attribute, showing the price per month charged on top of the VPS itself.

        A list with operating systems can also be found on the TransIP website: [https://www.transip.nl/vps/](https://www.transip.nl/vps/)
      operationId: List installable operating systems for a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    operatingSystems:
                    - description: Ubuntu 18.04 LTS
                      isPreinstallableImage: false
                      name: ubuntu-18.04
                      price: 1250
                      version: 18.04 LTS
              schema:
                $ref: '#/components/schemas/inline_response_200_46'
          description: OK
      security:
      - oauth2: []
      summary: List installable operating systems for a VPS
      tags:
      - VPS
    post:
      description: |-
        With this method you can install operating systems and preinstalled images on a VPS.

        A relatively important aspect regarding this feature is the ability to specify if the installation should be unattended using the `base64InstallText` parameter, allowing for automatic deployment of operating systems.

        ::: warning

        <i class="fa fa-warning"></i> **Warning**: This could potentially create an invoice when a commercial operating system or a commercial control panel is chosen.
      operationId: Install an operating system on a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_44'
        content:
          application/json:
            schema:
              example:
                operatingSystemName: ubuntu-18.04
              properties:
                base64InstallText:
                  description: Base64 encoded preseed / kickstart instructions, when
                    installing unattended
                  type: string
                hostname:
                  description: Hostname is required for preinstallable web controlpanels
                  type: string
                operatingSystemName:
                  description: The name of the operating system
                  type: string
              type: object
      responses:
        "201":
          description: Created
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Cannot install preinstallable image unattended
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Actions on VPS 'example-vps' are temporary disabled
          description: Conflict
      security:
      - oauth2: []
      summary: Install an operating system on a VPS
      tags:
      - VPS
  /vps/{vpsName}/snapshots:
    get:
      description: |-
        This method allows you to list all snapshots that are taken of your VPS main disk.

        A snapshot status can have the following values: ‘active‘, ‘creating‘, ‘reverting‘, ‘deleting‘, ‘pendingDeletion‘, ‘syncing‘, ‘moving‘ when status is ‘active‘ you can perform actions on it.
      operationId: List snapshots for a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    snapshots:
                    - dateTimeCreate: 2019-07-14 12:21:11
                      description: before upgrade
                      diskSize: 314572800
                      name: "1572607577"
                      operatingSystem: ubuntu-18.04
                      status: creating
              schema:
                $ref: '#/components/schemas/inline_response_200_47'
          description: OK
      security:
      - oauth2: []
      summary: List snapshots for a VPS
      tags:
      - VPS
    post:
      description: |-
        With this API call you can create a snapshot of a VPS.

        In case the creation of this snapshot leads to exceeding the maximum allowed snapshots, the API call will return an error and the snapshot will not be created - please order extra snapshots before proceeding.

        Creating a snapshot allows for restoring it on another VPS using the [Revert snapshot to a VPS](#vps-snapshots-patch) given that its specifications equals or exceeds those of the snapshot's source VPS.

        ::: warning

        We strongly recommend shutting the VPS down before taking a snapshot in order to prevent data loss, etc.
      operationId: Create snapshot of a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_45'
        content:
          application/json:
            schema:
              example:
                description: BeforeItsAllBroken
                shouldStartVps: true
              properties:
                description:
                  type: string
                shouldStartVps:
                  description: Specify whether the VPS should be started immediately
                    after the snapshot was created, default is `true`
                  type: boolean
              type: object
      responses:
        "201":
          description: Created
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Actions on VPS 'example-vps' are temporary disabled
          description: Conflict
      security:
      - oauth2: []
      summary: Create snapshot of a VPS
      tags:
      - VPS
  /vps/{vpsName}/snapshots/{snapshotName}:
    delete:
      description: Delete a VPS snapshot using this API call.
      operationId: Delete a snapshot
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the snapshot
        example: "1500027671"
        explode: false
        in: path
        name: snapshotName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Actions on VPS 'example-vps' are temporary disabled
          description: Conflict
      security:
      - oauth2: []
      summary: Delete a snapshot
      tags:
      - VPS
    get:
      description: Specifying the snapshot ID and the VPS name it’s associated with,
        allows for insight in snapshot details.
      operationId: Get snapshot by name
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the snapshot
        example: "1500027671"
        explode: false
        in: path
        name: snapshotName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    snapshot:
                      dateTimeCreate: 2019-07-14 12:21:11
                      description: before upgrade
                      diskSize: 314572800
                      name: "1572607577"
                      operatingSystem: ubuntu-18.04
                      status: creating
              schema:
                $ref: '#/components/schemas/inline_response_200_48'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Snapshot with name '1500027671' not found
          description: Not Found
      security:
      - oauth2: []
      summary: Get snapshot by name
      tags:
      - VPS
    patch:
      description: |-
        This method can be used to revert a snapshot to a VPS. Specifying the `destinationVpsName` attribute makes sure the snapshot is restored onto another VPS.

        Networking may be configured statically on the source VPS, therefore breaking connectivity when restored onto another VPS with a new assigned IP. You should be able to alter this through the KVM console in the TransIP control panel in case SSH is unavailable.
      operationId: Revert snapshot to a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the snapshot
        example: "1500027671"
        explode: false
        in: path
        name: snapshotName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_46'
        content:
          application/json:
            schema:
              example:
                destinationVpsName: example-vps
              properties:
                destinationVpsName:
                  description: When set, revert the snapshot to this VPS
                  type: string
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Snapshot '1500027671' diskSize '157286400' is bigger than
                      destination diskSize '52428800'
          description: Not Acceptable
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Actions on VPS 'example-vps' are temporary disabled
          description: Conflict
      security:
      - oauth2: []
      summary: Revert snapshot to a VPS
      tags:
      - VPS
  /vps/{vpsName}/tcp-monitors:
    get:
      description: Get an overview of all existing monitors attached to your VPS.
      operationId: List all TCP monitors for a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    tcpMonitors:
                    - allowedTimeouts: 1
                      contacts:
                      - enableEmail: true
                        enableSMS: false
                        id: 1
                      ignoreTimes:
                      - timeFrom: 18:00
                        timeTo: 08:30
                      interval: 6
                      ipAddress: 10.3.37.1
                      label: HTTP
                      ports:
                      - 80
                      - 443
              schema:
                $ref: '#/components/schemas/inline_response_200_49'
          description: OK
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
      security:
      - oauth2: []
      summary: List all TCP monitors for a VPS
      tags:
      - VPS
    post:
      description: Create a TCP monitor and specify which ports you would like to
        monitor.
      operationId: Create a TCP monitor for a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_47'
        content:
          application/json:
            schema:
              example:
                tcpMonitor:
                  allowedTimeouts: 1
                  contacts:
                  - enableEmail: true
                    enableSMS: false
                    id: 1
                  ignoreTimes:
                  - timeFrom: 18:00
                    timeTo: 08:30
                  interval: 6
                  ipAddress: 10.3.37.1
                  label: HTTP
                  ports:
                  - 80
                  - 443
              properties:
                tcpMonitor:
                  $ref: '#/components/schemas/_vps__vpsName__tcp_monitors_tcpMonitor'
              type: object
      responses:
        "201":
          description: Created
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Please purchase a monitoring addon for `example-vps`
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: IP address '%s' is not found on VPS '%s'
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: The allowed timeouts value can only be a number between
                      1 - 5. Value `25` was provided
          description: Not Acceptable
      security:
      - oauth2: []
      summary: Create a TCP monitor for a VPS
      tags:
      - VPS
  /vps/{vpsName}/tcp-monitors/{ipAddress}:
    delete:
      operationId: Delete a TCP monitor for a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      - description: IP Address that is monitored
        example: 10.3.37.1
        explode: false
        in: path
        name: ipAddress
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Actions on VPS 'example-vps' are temporary disabled
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
      security:
      - oauth2: []
      summary: Delete a TCP monitor for a VPS
      tags:
      - VPS
    put:
      operationId: Update a TCP monitor for a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      - description: IP Address that is monitored
        example: 10.3.37.1
        explode: false
        in: path
        name: ipAddress
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_48'
        content:
          application/json:
            schema:
              example:
                tcpMonitor:
                  allowedTimeouts: 1
                  contacts:
                  - enableEmail: true
                    enableSMS: false
                    id: 1
                  ignoreTimes:
                  - timeFrom: 18:00
                    timeTo: 08:30
                  interval: 6
                  ipAddress: 10.3.37.1
                  label: HTTP
                  ports:
                  - 80
                  - 443
              properties:
                tcpMonitor:
                  $ref: '#/components/schemas/_vps__vpsName__tcp_monitors_tcpMonitor'
              type: object
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Actions on VPS 'example-vps' are temporary disabled
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: The allowed timeouts value can only be a number between
                      1 - 5. Value `25` was provided
          description: Not Acceptable
      security:
      - oauth2: []
      summary: Update a TCP monitor for a VPS
      tags:
      - VPS
  /vps/{vpsName}/upgrades:
    get:
      description: |-
        List all available product upgrades for a VPS.

        Upgrades differentiate from add-ons in the sense that upgrades are VPS products like the `vps-bladevps-pro-x16` VPS product.
      operationId: List available upgrades for a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    upgrades:
                    - description: This is an example product
                      name: example-product-name
                      price: 499
                      recurringPrice: 799
              schema:
                $ref: '#/components/schemas/inline_response_200_50'
          description: OK
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Actions on VPS 'example-vps' are temporary disabled
          description: Conflict
      security:
      - oauth2: []
      summary: List available upgrades for a VPS
      tags:
      - VPS
    post:
      description: |-
        This API call allows you too upgrade a VPS by name and productName.

        It’s not possible to downgrade a VPS, as most upgrades cannot be deallocated due to technical reasons (data loss when shrinking the disk space).

        ::: warning

        <i class="fa fa-warning"></i> **Warning**: This API call will create an invoice for the upgrade.
      operationId: Upgrade a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_49'
        content:
          application/json:
            schema:
              example:
                productName: vps-bladevps-pro-x16
              properties:
                productName:
                  type: string
              type: object
      responses:
        "201":
          description: Created
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Actions on VPS 'example-vps' are temporary disabled
          description: Conflict
      security:
      - oauth2: []
      summary: Upgrade a VPS
      tags:
      - VPS
  /vps/{vpsName}/usage:
    get:
      description: |-
        Use this API call to retrieve usage data for a specific VPS. Make sure to specify the `dateTimeStart` and `dateTimeEnd` parameters in UNIX timestamp format.

        Please take the following into account:

        * The `dateTimeStart` and `dateTimeEnd` parameters allow for gathering information about a specific time period, when not specified the output will contain data for the past 24 hours;

        * The difference between `dateTimeStart` and `dateTimeEnd` parameters may not exceed one month.

         For traffic-related information and statistics, use the [Get traffic information for a VPS](#vps-traffic-get) API call.
      operationId: Get usage data for a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_50'
        content:
          application/json:
            schema:
              example:
                dateTimeEnd: 1500542619
                dateTimeStart: 1500538995
                types: cpu,disk,network
              properties:
                dateTimeEnd:
                  description: The end date of the usage statistics
                  type: number
                dateTimeStart:
                  description: The start date of the usage statistics
                  type: number
                types:
                  description: The types of statistics that can be returned, `cpu`,
                    `disk` and `network` can be specified in a comma seperated way.
                    If not specified, all data will be returned.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    usage:
                      cpu:
                      - date: 1574783109
                        percentage: 3.11
                      disk:
                      - date: 1574783109
                        iopsRead: 0.27
                        iopsWrite: 0.13
                      network:
                      - date: 1574783109
                        mbitIn: 249.93
                        mbitOut: 100.2
              schema:
                $ref: '#/components/schemas/inline_response_200_51'
          description: OK
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: 'These are invalid usage types: invalid, type.'
          description: Not Acceptable
      security:
      - oauth2: []
      summary: Get usage data for a VPS
      tags:
      - VPS
  /vps/{vpsName}/vnc-data:
    get:
      description: |-
        Get the location, token and password in order to connect directly to the VNC console of your VPS.

        Please note, you cannot directly connect to the proxy using a VNC client, use a client that supports websockets like https://github.com/novnc/noVNC

        Use the information as URL query parameters, or use the URL in the url parameter directly. Then enter the password. See the link below for an example of how to provide URL query parameters to a hosted novnc instance.

        By default novnc understands the following url parameters:

        - **host** the host hosting the vnc proxy, this should be `vncproxy.transip.nl`

        - **path** the path to request on the host, `websockify?token=YOURTOKEN`

        - **password** the vnc password

        - **autoconnect** whether or not to start connecting once you loaded the page

         An example of all parameters together in one url would be https://novnc.com/noVNC/vnc.html?host=vncproxy.transip.nl&path=websockify?token=esco024gzqwyeeb5nexayi2gve09paw9dytumyxqzurxj5t642o5p6myzisn5gch&password=fVpTyDrhMiuYBXxn&autoconnect=true

         ::: warning

         <i class="fa fa-warning"></i> **Warning**: We do recommend running novnc locally or hosting your own novnc page, this way you can make sure your token and password remain private.
      operationId: Get VNC data for a VPS
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    vncData:
                      host: vncproxy.transip.nl
                      password: fVpTyDrhMiuYBXxn
                      path: websockify?token=esco024gzqwyeeb5nexayi2gve09paw9dytumyxqzurxj5t642o5p6myzisn5gch
                      token: esco024gzqwyeeb5nexayi2gve09paw9dytumyxqzurxj5t642o5p6myzisn5gch
                      url: https://vncproxy.transip.nl/websockify?token=esco024gzqwyeeb5nexayi2gve09paw9dytumyxqzurxj5t642o5p6myzisn5gch
              schema:
                $ref: '#/components/schemas/inline_response_200_52'
          description: OK
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS console for 'example-vps' is currently unavailable
          description: Conflict
      security:
      - oauth2: []
      summary: Get VNC data for a VPS
      tags:
      - VPS
    patch:
      description: Call this method to regenerate the VNC credentials for a VPS.
      operationId: Regenerate VNC token for a vps
      parameters:
      - description: VPS name
        example: example-vps
        explode: false
        in: path
        name: vpsName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS 'example-vps' is blocked, no modification is allowed
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS with name 'example-vps' not found
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: VPS console for 'example-vps' is currently unavailable
          description: Conflict
      security:
      - oauth2: []
      summary: Regenerate VNC token for a vps
      tags:
      - VPS
  /whitelabel:
    post:
      description: |-
        Order a whitelabel account from the API. Note that you do not need to order a whitelabel account for every registered domain name.

        Please check the TransIP control panel to view the cost for a whitelabel account.

        ::: warning

        <i class="fa fa-warning"></i> **Warning**: This API call will create an invoice!
      operationId: Order a whitelabel account
      responses:
        "201":
          description: Created
        "406":
          content:
            application/json:
              examples:
                response:
                  value:
                    error: You already have a whitelabel account.
          description: Not Acceptable
      security:
      - oauth2: []
      summary: Order a whitelabel account
      tags:
      - Domains
components:
  requestBodies:
    Add_a_new_single_DNS_entry_to_a_domainBody:
      content:
        application/json:
          schema:
            example:
              dnsEntry:
                content: 127.0.0.1
                expire: 86400
                name: www
                type: A
            properties:
              dnsEntry:
                properties:
                  content:
                    description: The content of of the dns entry, for example '10
                      mail', '127.0.0.1' or 'www'
                    type: string
                  expire:
                    description: The expiration period of the dns entry, in seconds.
                      For example 86400 for a day of expiration
                    type: number
                  name:
                    description: The name of the dns entry, for example '@' or 'www'
                    type: string
                  type:
                    description: The type of dns entry. Possbible types are 'A', 'AAAA',
                      'CNAME', 'MX', 'NS', 'TXT', 'SRV', 'SSHFP' and 'TLSA'
                    type: string
                required:
                - content
                - expire
                - name
                - type
                type: object
            type: object
    Cancel_a_VPSBody:
      content:
        application/json:
          schema:
            example:
              endTime: end
            properties:
              endTime:
                description: Cancellation time, either 'end' (default) or 'immediately'
                type: string
            type: object
    Cancel_a_domainBody:
      content:
        application/json:
          schema:
            example:
              endTime: end
            properties:
              endTime:
                description: Cancellation time, either 'end' or 'immediately'
                type: string
            type: object
    Create_a_TCP_monitor_for_a_VPSBody:
      content:
        application/json:
          schema:
            example:
              tcpMonitor:
                allowedTimeouts: 1
                contacts:
                - enableEmail: true
                  enableSMS: false
                  id: 1
                ignoreTimes:
                - timeFrom: 18:00
                  timeTo: 08:30
                interval: 6
                ipAddress: 10.3.37.1
                label: HTTP
                ports:
                - 80
                - 443
            properties:
              tcpMonitor:
                properties:
                  allowedTimeouts:
                    description: Allowed time outs (numbers 1-5)
                    type: number
                  contacts:
                    description: Contact that will be notified for this monitor
                    type: array
                  ignoreTimes:
                    description: The hours when the TCP monitoring is ignored (no
                      notifications are sent out)
                    type: array
                  interval:
                    description: Checking interval in minutes (numbers 1-6)
                    type: number
                  ipAddress:
                    description: IP Address that is monitored
                    type: string
                  label:
                    description: Title of the monitor
                    type: string
                  ports:
                    description: Ports that are monitored
                    type: array
                required:
                - allowedTimeouts
                - contacts
                - ignoreTimes
                - interval
                - ipAddress
                - label
                - ports
                type: object
            type: object
    List_all_domainsTags:
      content:
        application/json:
          schema:
            type: string
      description: Tags to filter by, separated by a comma.
    Update_reverse_DNS_for_a_VPSBody:
      content:
        application/json:
          schema:
            example:
              ipAddress:
                address: 37.97.254.6
                dnsResolvers:
                - 195.8.195.8
                - 195.135.195.135
                gateway: 37.97.254.1
                reverseDns: example.com
                subnetMask: 255.255.255.0
            properties:
              ipAddress:
                properties:
                  address:
                    description: The IP address
                    type: string
                  dnsResolvers:
                    description: The TransIP DNS resolvers you can use
                    type: array
                  gateway:
                    description: Gateway
                    type: string
                  reverseDns:
                    description: Reverse DNS, also known as the PTR record
                    type: string
                  subnetMask:
                    description: Subnet mask
                    type: string
                required:
                - reverseDns
                type: object
            type: object
    inline_object:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
    inline_object_1:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_1'
    inline_object_2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_2'
    inline_object_3:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_3'
    inline_object_4:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_4'
    inline_object_5:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_5'
    inline_object_6:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_6'
    inline_object_7:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_7'
    inline_object_8:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_8'
    inline_object_9:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_9'
    inline_object_10:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_10'
    inline_object_11:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_11'
    inline_object_12:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_12'
    inline_object_13:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_13'
    inline_object_14:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_14'
    inline_object_15:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_15'
    inline_object_16:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_16'
    inline_object_17:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_17'
    inline_object_18:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_18'
    inline_object_19:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_19'
    inline_object_20:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_20'
    inline_object_21:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_21'
    inline_object_22:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_22'
    inline_object_23:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_23'
    inline_object_24:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_24'
    inline_object_25:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_25'
    inline_object_26:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_26'
    inline_object_27:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_27'
    inline_object_28:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_28'
    inline_object_29:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_29'
    inline_object_30:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_30'
    inline_object_31:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_31'
    inline_object_32:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_32'
    inline_object_33:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_33'
    inline_object_34:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_34'
    inline_object_35:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_35'
    inline_object_36:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_36'
    inline_object_37:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_37'
    inline_object_38:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_38'
    inline_object_39:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_39'
    inline_object_40:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_40'
    inline_object_41:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_41'
    inline_object_42:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_42'
    inline_object_43:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_43'
    inline_object_44:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_44'
    inline_object_45:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_45'
    inline_object_46:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_46'
    inline_object_47:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_47'
    inline_object_48:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_48'
    inline_object_49:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_49'
    inline_object_50:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_50'
  schemas:
    Actions: {}
    Addons:
      properties:
        active:
          description: A list of non cancellable active addons
          items: {}
          type: array
        available:
          description: A list of available addons that you can order
          items: {}
          type: array
        cancellable:
          description: A list of addons that you can cancel
          items: {}
          type: array
      type: object
    ApiTest: {}
    Availability: {}
    AvailabilityZone:
      properties:
        country:
          description: The 2 letter code for the country the AvailabilityZone is in
          type: string
        isDefault:
          description: If true this is the default zone new VPSes and clones are created
            in
          type: boolean
        name:
          description: Name of AvailabilityZone
          type: string
      type: object
    BigStorage:
      properties:
        availabilityZone:
          description: The availability zone the bigstorage is located in
          type: string
        description:
          description: Name that can be set by customer
          type: string
        diskSize:
          description: Disk size of the big storage in kB
          type: number
        isLocked:
          description: Lock status of the big storage, when it is locked, it cannot
            be attached or detached.
          type: boolean
        name:
          description: Name of the big storage
          type: string
        offsiteBackups:
          description: Whether a bigstorage has backups
          type: boolean
        status:
          description: Status of the big storage can be 'active', 'attaching' or 'detachting'
          type: string
        vpsName:
          description: The VPS that the big storage is attached to
          type: string
      required:
      - description
      - vpsName
      type: object
    BigStorageBackup:
      properties:
        availabilityZone:
          description: The name of the availability zone the backup is in
          type: string
        dateTimeCreate:
          description: Date of the big storage backup
          type: string
        diskSize:
          description: The backup disk size in kB
          type: number
        id:
          description: Id of the big storage
          type: number
        status:
          description: Status of the big storage backup ('active', 'creating', 'reverting',
            'deleting', 'pendingDeletion', 'syncing', 'moving')
          type: string
      required:
      - diskSize
      type: object
    Big_Storage_Backups: {}
    Big_Storages: {}
    Branding: {}
    Colocation:
      properties:
        ipRanges:
          description: List of IP ranges
          items: {}
          type: array
        name:
          description: Colocation name
          type: string
      required:
      - ipRanges
      - name
      type: object
    Colocations: {}
    Contact:
      properties:
        email:
          description: Email address of the contact
          type: string
        id:
          description: Id number of the contact
          type: number
        name:
          description: Name of the contact
          type: string
        telephone:
          description: Telephone number of the contact
          type: string
      required:
      - email
      - id
      - name
      - telephone
      type: object
    Contacts: {}
    DNS: {}
    DNSSEC: {}
    DataCenterVisitor:
      properties:
        accessCode:
          description: The accesscode of the visitor.
          type: string
        hasBeenRegisteredBefore:
          description: True iff this visitor been registered before at the datacenter.
            If true, does not need the accesscode
          type: string
        name:
          description: The name of the visitor
          type: string
        reservationNumber:
          description: The reservation number of the visitor.
          type: string
      required:
      - accessCode
      - hasBeenRegisteredBefore
      - name
      - reservationNumber
      type: object
    DnsEntry:
      properties:
        content:
          description: The content of of the dns entry, for example '10 mail', '127.0.0.1'
            or 'www'
          type: string
        expire:
          description: The expiration period of the dns entry, in seconds. For example
            86400 for a day of expiration
          type: number
        name:
          description: The name of the dns entry, for example '@' or 'www'
          type: string
        type:
          description: The type of dns entry. Possbible types are 'A', 'AAAA', 'CNAME',
            'MX', 'NS', 'TXT', 'SRV', 'SSHFP' and 'TLSA'
          type: string
      required:
      - content
      - expire
      - name
      - type
      type: object
    DnsSecEntry:
      properties:
        algorithm:
          description: The algorithm type that is used, click [here](https://www.transip.nl/vragen/461-domeinnaam-nameservers-gebruikt-beveiligen-dnssec/)
            to see the possible options.
          type: number
        flags:
          description: The signing key number, either 256 (Zone Signing Key) or 257
            (Key Signing Key)
          type: number
        keyTag:
          description: A 5-digit key of the Zonesigner
          type: number
        publicKey:
          description: The public key
          type: string
      required:
      - algorithm
      - flags
      - keyTag
      - publicKey
      type: object
    Domain:
      properties:
        tags:
          description: The custom tags added to this domain.
          items: {}
          type: array
        authCode:
          description: The authcode for this domain as generated by the registry.
          type: string
        cancellationDate:
          description: Cancellation data, in YYYY-mm-dd h:i:s format, null if the
            domain is active.
          type: string
        cancellationStatus:
          description: Cancellation status, null if the domain is active, 'cancelled'
            when the domain is cancelled.
          type: string
        isDnsOnly:
          description: Whether this domain is DNS only
          type: boolean
        isTransferLocked:
          description: If this domain supports transfer locking, this flag is true
            when the domains ability to transfer is locked at the registry.
          type: boolean
        isWhitelabel:
          description: If this domain is added to your whitelabel.
          type: boolean
        name:
          description: The name, including the tld of this domain
          type: string
        registrationDate:
          description: Registration date of the domain, in YYYY-mm-dd format.
          type: string
        renewalDate:
          description: Next renewal date of the domain, in YYYY-mm-dd format.
          type: string
      required:
      - isTransferLocked
      - isWhitelabel
      - name
      - tags
      type: object
    DomainAction:
      properties:
        hasFailed:
          description: If this action has failed, this field will be true.
          type: boolean
        message:
          description: If this action has failed, this field will contain an descriptive
            message.
          type: string
        name:
          description: The name of this DomainAction.
          type: string
      required:
      - name
      type: object
    DomainBranding:
      properties:
        bannerLine1:
          description: The first generic bannerLine displayed in whois-branded whois
            output.
          type: string
        bannerLine2:
          description: The second generic bannerLine displayed in whois-branded whois
            output.
          type: string
        bannerLine3:
          description: The third generic bannerLine displayed in whois-branded whois
            output.
          type: string
        companyName:
          description: The company name displayed in transfer-branded e-mails
          type: string
        companyUrl:
          description: The company url displayed in transfer-branded e-mails
          type: string
        supportEmail:
          description: The support email used for transfer-branded e-mails
          type: string
        termsOfUsageUrl:
          description: The terms of usage url as displayed in transfer-branded e-mails
          type: string
      required:
      - bannerLine1
      - bannerLine2
      - bannerLine3
      - companyName
      - companyUrl
      - supportEmail
      - termsOfUsageUrl
      type: object
    DomainCheckResult:
      properties:
        actions:
          description: 'List of available actions to perform on this domain. Possible
            actions are: ''register'', ''transfer'', ''internalpull'' and ''internalpush'''
          items: {}
          type: array
        domainName:
          description: The name of the domain
          type: string
        status:
          description: 'The status for this domain. Possible statuses are: ''inyouraccount'',
            ''unavailable'', ''notfree'', ''free'', ''internalpull'' and ''internalpush'''
          type: string
      required:
      - actions
      - domainName
      - status
      type: object
    Domains: {}
    Elements: {}
    HA-IP: {}
    HA-IP_IP_Addresses: {}
    HA-IP_StatusReports: {}
    HA-IP_certificates: {}
    HA-IP_port_configurations: {}
    Haip:
      properties:
        description:
          description: The description that can be set by the customer
          type: string
        healthCheckInterval:
          description: The interval in milliseconds at which health checks are performed.
            The interval may not be smaller than 2000ms.
          type: number
        httpHealthCheckPath:
          description: The path (URI) of the page to check HTTP status code on
          type: string
        httpHealthCheckPort:
          description: The port to perform the HTTP check on
          type: number
        httpHealthCheckSsl:
          description: Whether to use SSL when performing the HTTP check
          type: boolean
        ipAddresses:
          description: The IPs attached to this haip
          items: {}
          type: array
        ipSetup:
          description: 'HA-IP IP setup: ''both'', ''noipv6'', ''ipv6to4'''
          type: string
        ipv4Address:
          description: HA-IP IPv4 address
          type: string
        ipv6Address:
          description: HA-IP IPv6 address
          type: string
        isLoadBalancingEnabled:
          description: Whether load balancing is enabled for this HA-IP
          type: boolean
        loadBalancingMode:
          description: 'HA-IP load balancing mode: ''roundrobin'', ''cookie'', ''source'''
          type: string
        name:
          description: HA-IP name
          type: string
        ptrRecord:
          description: The PTR record for the HA-IP
          type: string
        status:
          description: HA-IP status, either 'active', 'inactive', 'creating'
          type: string
        stickyCookieName:
          description: Cookie name to pin sessions on when using cookie balancing
            mode
          type: string
      type: object
    HaipCertificate:
      properties:
        commonName:
          description: The common name of the certificate, usually a domain name
          type: string
        expirationDate:
          description: The expiration date of the certificate in 'Y-m-d' format
          type: string
        id:
          description: The domain ssl certificate id
          type: number
      type: object
    HaipPortConfiguration:
      properties:
        endpointSslMode:
          description: 'The mode determining how traffic between our load balancers
            and your attached IP address(es) is encrypted: ''off'', ''on'', ''strict'''
          type: string
        id:
          description: The port configuration Id
          type: number
        mode:
          description: 'The mode determining how traffic is processed and forwarded:
            ''tcp'', ''http'', ''https'', ''proxy'''
          type: string
        name:
          description: A name describing the port
          type: string
        sourcePort:
          description: The port at which traffic arrives on your HA-IP
          type: number
        targetPort:
          description: The port at which traffic arrives on your attached IP address(es)
          type: number
      required:
      - endpointSslMode
      - mode
      - name
      - sourcePort
      - targetPort
      type: object
    HaipStatusReport:
      properties:
        ipAddress:
          description: Attached IP address this status report is for
          type: string
        ipVersion:
          description: IP Version 4,6
          type: number
        lastChange:
          description: Last change in the state in Europe/Amsterdam timezone
          type: string
        loadBalancerIp:
          description: The IP address of the HA-IP load balancer
          type: string
        loadBalancerName:
          description: The name of the load balancer
          type: string
        port:
          description: HA-IP PortConfiguration port
          type: number
        state:
          description: The state of the load balancer, either 'up' or 'down'
          type: string
      type: object
    IP_Addresses: {}
    IP_addresses: {}
    Invoice:
      properties:
        creationDate:
          description: Invoice creation date
          type: string
        currency:
          description: Currency used for this invoice
          type: string
        dueDate:
          description: Invoice deadline
          type: string
        invoiceNumber:
          description: Invoice number
          type: string
        invoiceStatus:
          description: Invoice status
          type: string
        payDate:
          description: Invoice paid date
          type: string
        totalAmount:
          description: Invoice total (displayed in cents)
          type: number
        totalAmountInclVat:
          description: Invoice total including VAT (displayed in cents)
          type: number
      required:
      - creationDate
      - currency
      - dueDate
      - invoiceNumber
      - invoiceStatus
      - payDate
      - totalAmount
      - totalAmountInclVat
      type: object
    InvoiceItem:
      properties:
        date:
          description: Date when the order line item was up for invoicing
          type: string
        description:
          description: Product description
          type: string
        discounts:
          description: Applied discounts
          items: {}
          type: array
        isRecurring:
          description: Payment is recurring
          type: boolean
        price:
          description: Price excluding VAT (displayed in cents)
          type: number
        priceInclVat:
          description: Price including VAT (displayed in cents)
          type: number
        product:
          description: Product name
          type: string
        quantity:
          description: Quantity
          type: number
        vat:
          description: Amount of VAT charged
          type: number
        vatPercentage:
          description: Percentage used to calculate the VAT
          type: number
      required:
      - date
      - description
      - discounts
      - isRecurring
      - price
      - priceInclVat
      - product
      - quantity
      - vat
      - vatPercentage
      type: object
    InvoiceItemDiscount:
      properties:
        amount:
          description: Discounted amount (in cents)
          type: number
        description:
          description: Applied discount description
          type: string
      required:
      - amount
      - description
      type: object
    InvoiceItems: {}
    Invoices: {}
    IpAddress:
      properties:
        address:
          description: The IP address
          type: string
        dnsResolvers:
          description: The TransIP DNS resolvers you can use
          items: {}
          type: array
        gateway:
          description: Gateway
          type: string
        reverseDns:
          description: Reverse DNS, also known as the PTR record
          type: string
        subnetMask:
          description: Subnet mask
          type: string
      required:
      - reverseDns
      type: object
    MailServiceInformation:
      properties:
        dnsTxt:
          description: x-transip-mail-auth DNS TXT record Value
          type: string
        password:
          description: The password of the mail service
          type: string
        quota:
          description: The quota of the mail service
          type: number
        usage:
          description: The usage of the mail service
          type: number
        username:
          description: The username of the mail service
          type: string
      type: object
    Mail_Service: {}
    MonitoringContacts: {}
    Nameserver:
      properties:
        hostname:
          description: The hostname of this nameserver
          type: string
        ipv4:
          description: Optional ipv4 glue record for this nameserver
          type: string
        ipv6:
          description: Optional ipv6 glue record for this nameserver
          type: string
      required:
      - hostname
      type: object
    Nameservers: {}
    OperatingSystem:
      properties:
        description:
          description: Description
          type: string
        isPreinstallableImage:
          description: Is a preinstallable image
          type: boolean
        name:
          description: The operating system name
          type: string
        price:
          description: The monthly price of the operating system in cents
          type: number
        version:
          description: The version of the operating system
          type: string
      required:
      - name
      type: object
    OperatingSystems: {}
    Pdf: {}
    PrivateNetwork:
      properties:
        description:
          description: The custom name that can be set by customer
          type: string
        isBlocked:
          description: If the Private Network is administratively blocked
          type: boolean
        isLocked:
          description: When locked, another process is already working with this private
            network
          type: boolean
        name:
          description: The unique private network name
          type: string
        vpsNames:
          description: The VPSes in this private network
          items: {}
          type: array
      required:
      - description
      - vpsNames
      type: object
    Private_Networks: {}
    Product:
      properties:
        description:
          description: Describes this product
          type: string
        name:
          description: Name of the product
          type: string
        price:
          description: Price in cents
          type: number
        recurringPrice:
          description: The recurring price for the product in cents
          type: number
      type: object
    ProductElement:
      properties:
        amount:
          description: Amount
          type: number
        description:
          description: Describes this product element
          type: string
        name:
          description: Name of the product element
          type: string
      type: object
    Products:
      properties:
        bigStorage:
          description: A list of big storage products
          items: {}
          type: array
        haip:
          description: A list of haip products
          items: {}
          type: array
        privateNetworks:
          description: A list of private network products
          items: {}
          type: array
        vps:
          description: A list of vps products
          items: {}
          type: array
        vpsAddon:
          description: A list of vps addons
          items: {}
          type: array
      type: object
    RemoteHands:
      properties:
        coloName:
          description: Name of the colocation contract
          type: string
        contactName:
          description: Name of the person that created the remote hands request
          type: string
        expectedDuration:
          description: Expected duration in minutes
          type: number
        instructions:
          description: The instructions for the datacenter engineer to perform
          type: string
        phoneNumber:
          description: Phonenumber to contact in case of questions regarding the remotehands
            request
          type: string
      type: object
    Snapshot:
      properties:
        dateTimeCreate:
          description: The snapshot creation date
          type: string
        description:
          description: The snapshot description
          type: string
        diskSize:
          description: The size of the snapshot in kB
          type: number
        name:
          description: The snapshot name
          type: string
        operatingSystem:
          description: The snapshot OperatingSystem
          type: string
        status:
          description: The snapshot status ('active', 'creating', 'reverting', 'deleting',
            'pendingDeletion', 'syncing', 'moving')
          type: string
      type: object
    Snapshots: {}
    Ssl: {}
    SslCertificate:
      properties:
        certificateId:
          description: The id of the certificate, can be used to retrieve additional
            info
          type: number
        commonName:
          description: The domain name that the SSL certificate is added to. Start
            with '*.' when the certificate is a wildcard.
          type: string
        expirationDate:
          description: Expiration date
          type: string
        status:
          description: The current status, either 'active', 'inactive' or 'expired'
          type: string
      required:
      - certificateId
      - commonName
      - expirationDate
      - status
      type: object
    TCPMonitor:
      properties:
        allowedTimeouts:
          description: Allowed time outs (numbers 1-5)
          type: number
        contacts:
          description: Contact that will be notified for this monitor
          items: {}
          type: array
        ignoreTimes:
          description: The hours when the TCP monitoring is ignored (no notifications
            are sent out)
          items: {}
          type: array
        interval:
          description: Checking interval in minutes (numbers 1-6)
          type: number
        ipAddress:
          description: IP Address that is monitored
          type: string
        label:
          description: Title of the monitor
          type: string
        ports:
          description: Ports that are monitored
          items: {}
          type: array
      required:
      - allowedTimeouts
      - contacts
      - ignoreTimes
      - interval
      - ipAddress
      - label
      - ports
      type: object
    TCPMonitorContact:
      properties:
        enableEmail:
          description: Send emails to contact
          type: boolean
        enableSMS:
          description: Send SMS text messages to contact
          type: boolean
        id:
          description: Monitoring contact id
          type: number
      required:
      - enableEmail
      - enableSMS
      - id
      type: object
    TCPMonitorIgnoreTime:
      properties:
        timeFrom:
          description: Start from (24 hour format)
          type: string
        timeTo:
          description: End at (24 hour format)
          type: string
      required:
      - timeFrom
      - timeTo
      type: object
    TCPMonitors: {}
    Tld:
      properties:
        cancelTimeFrame:
          description: Number of days a domain needs to be canceled before the renewal
            date.
          type: number
        capabilities:
          description: 'A list of the capabilities that this Tld has (the things that
            can be done with a domain under this tld). Possible capabilities are:
            ''requiresAuthCode'', ''canRegister'', ''canTransferWithOwnerChange'',
            ''canTransferWithoutOwnerChange'', ''canSetLock'', ''canSetOwner'', ''canSetContacts'',
            ''canSetNameservers'', ''supportsDnsSec'''
          items: {}
          type: array
        maxLength:
          description: The maximum amount of characters need for registering a domain
            under this TLD.
          type: number
        minLength:
          description: The minimum amount of characters need for registering a domain
            under this TLD.
          type: number
        name:
          description: The name of this TLD, including the starting dot. E.g. .nl
            or .com.
          type: string
        price:
          description: Price of the TLD in cents
          type: number
        recurringPrice:
          description: Price for renewing the TLD in cents
          type: number
        registrationPeriodLength:
          description: Length in months of each registration or renewal period.
          type: number
      required:
      - name
      type: object
    Tlds: {}
    Traffic: {}
    Upgrades: {}
    Usage:
      properties:
        cpu:
          items: {}
          type: array
        disk:
          items: {}
          type: array
        network:
          items: {}
          type: array
      required:
      - cpu
      - disk
      - network
      type: object
    VPS: {}
    VPS_Backups: {}
    VPS_Firewall: {}
    VPS_VNC_Data: {}
    Vps:
      properties:
        tags:
          description: The custom tags added to this VPS
          items: {}
          type: array
        availabilityZone:
          description: The name of the availability zone the VPS is in
          type: string
        cpus:
          description: The VPS cpu count
          type: number
        currentSnapshots:
          description: The amount of snapshots that is used on this VPS
          type: number
        description:
          description: The name that can be set by customer
          type: string
        diskSize:
          description: The VPS disk size in kB
          type: number
        ipAddress:
          description: The VPS main ipAddress
          type: string
        isBlocked:
          description: If the VPS is administratively blocked
          type: boolean
        isCustomerLocked:
          description: If this VPS is locked by the customer
          type: boolean
        isLocked:
          description: Whether or not another process is already doing stuff with
            this VPS
          type: boolean
        macAddress:
          description: The VPS macaddress
          type: string
        maxSnapshots:
          description: The maximum amount of snapshots for this VPS
          type: number
        memorySize:
          description: The VPS memory size in kB
          type: number
        name:
          description: The unique VPS name
          type: string
        operatingSystem:
          description: The VPS OperatingSystem
          type: string
        productName:
          description: The product name
          type: string
        status:
          description: The VPS status, either 'created', 'installing', 'running',
            'stopped' or 'paused'
          type: string
      required:
      - name
      - tags
      type: object
    VpsBackup:
      properties:
        availabilityZone:
          description: The name of the availability zone the backup is in
          type: string
        dateTimeCreate:
          description: The backup creation date
          type: string
        diskSize:
          description: The backup disk size in kB
          type: number
        id:
          description: The backup id
          type: number
        operatingSystem:
          description: The backup operatingSystem
          type: string
        status:
          description: Status of the backup ('active', 'creating', 'reverting', 'deleting',
            'pendingDeletion', 'syncing', 'moving')
          type: string
      required:
      - dateTimeCreate
      - diskSize
      - id
      - operatingSystem
      type: object
    VpsFirewall:
      properties:
        isEnabled:
          description: Whether the firewall is enabled for this VPS
          type: boolean
        ruleSet:
          description: Ruleset of the VPS
          items: {}
          type: array
      required:
      - isEnabled
      - ruleSet
      type: object
    VpsFirewallRule:
      properties:
        description:
          description: The rule name
          type: string
        endPort:
          description: The end port of this firewall rule
          type: number
        protocol:
          description: The protocol `tcp` ,  `udp` or `tcp_udp`
          type: string
        startPort:
          description: The start port of this firewall rule
          type: number
        whitelist:
          description: Whitelisted IP's or ranges that are allowed to connect, empty
            to allow all
          items: {}
          type: array
      required:
      - endPort
      - protocol
      - startPort
      - whitelist
      type: object
    VpsOrder:
      properties:
        addons:
          description: Array with additional addons
          items: {}
          type: array
        availabilityZone:
          description: The name of the availability zone where the vps should be created
          type: string
        base64InstallText:
          description: Base64 encoded preseed / kickstart instructions, when installing
            unattended
          type: string
        description:
          description: The description of the VPS
          type: string
        hostname:
          description: The name for the host, only needed for installing a preinstallable
            control panel image
          type: string
        operatingSystem:
          description: The name of the operating system to install
          type: string
        productName:
          description: Name of the product
          type: string
      required:
      - operatingSystem
      - productName
      type: object
    VpsTrafficInformation:
      properties:
        endDate:
          description: The end date in 'Y-m-d' format
          type: string
        maxInBytes:
          description: The maximum amount of bytes that can be used in this period
          type: number
        startDate:
          description: The start date in 'Y-m-d' format
          type: string
        usedInBytes:
          description: The usage in bytes for this period
          type: number
        usedTotalBytes:
          description: The usage in bytes
          type: number
      required:
      - endDate
      - maxInBytes
      - startDate
      - usedInBytes
      - usedTotalBytes
      type: object
    VpsUsageDataCpu:
      properties:
        date:
          description: Date of the entry, by default in UNIX timestamp format
          type: number
        percentage:
          description: The percentage of CPU usage for this entry
          type: number
      required:
      - date
      - percentage
      type: object
    VpsUsageDataDisk:
      properties:
        date:
          description: Date of the entry, by default in UNIX timestamp format
          type: number
        iopsRead:
          description: The read IOPS for this entry
          type: number
        iopsWrite:
          description: The write IOPS for this entry
          type: number
      required:
      - date
      - iopsRead
      - iopsWrite
      type: object
    VpsUsageDataNetwork:
      properties:
        date:
          description: Date of the entry, by default in UNIX timestamp format
          type: number
        mbitIn:
          description: The amount of inbound traffic in Mbps for this usage entry
          type: number
        mbitOut:
          description: The amount of outbound traffic in Mbps for this usage entry
          type: number
      required:
      - date
      - mbitIn
      - mbitOut
      type: object
    VpsVncData:
      properties:
        host:
          description: Location of the VNC Proxy
          type: string
        password:
          description: Password to setup up the VNC connection (changes dynamically)
          type: string
        path:
          description: Websocket path including the token
          type: string
        token:
          description: Token to identify the VPS to connect to (changes dynamically)
          type: string
        url:
          description: Complete websocket URL
          type: string
      type: object
    Whitelabel: {}
    Whois: {}
    WhoisContact:
      properties:
        city:
          description: The city part of the address of this Contact
          type: string
        companyKvk:
          description: The kvk number of this Contact, in case of a company
          type: string
        companyName:
          description: The companyName of this Contact, in case of a company
          type: string
        companyType:
          description: 'The type number of this Contact, in case of a company. Possible
            types are: ''BV'', ''BVI/O'', ''COOP'', ''CV'', ''EENMANSZAAK'', ''KERK'',
            ''NV'', ''OWM'', ''REDR'', ''STICHTING'', ''VERENIGING'', ''VOF'', ''BEG'',
            ''BRO'', ''EESV'' and ''ANDERS'''
          type: string
        country:
          description: The country of this Contact, one of the ISO 3166-1 2 letter
            country codes, must be lowercase.
          type: string
        email:
          description: The email address of this Contact
          type: string
        faxNumber:
          description: The faxNumber of this Contact
          type: string
        firstName:
          description: The firstName of this Contact
          type: string
        lastName:
          description: The lastName of this Contact
          type: string
        number:
          description: The number part of the address of this Contact
          type: string
        phoneNumber:
          description: The phoneNumber of this Contact
          type: string
        postalCode:
          description: The postalCode part of the address of this Contact
          type: string
        street:
          description: The street of the address of this Contact
          type: string
        type:
          description: The type of this Contact, 'registrant', 'administrative' or
            'technical'
          type: string
      required:
      - city
      - companyKvk
      - companyName
      - companyType
      - country
      - email
      - firstName
      - lastName
      - number
      - phoneNumber
      - postalCode
      - street
      - type
      type: object
    inline_response_200:
      example:
        ping: ping
      properties:
        ping:
          type: string
    inline_response_200_1:
      example:
        availabilityZones:
        - ""
        - ""
      properties:
        availabilityZones:
          items: {}
          type: array
    inline_response_200_2:
      example:
        bigStorages:
        - ""
        - ""
      properties:
        bigStorages:
          items: {}
          type: array
    inline_object:
      example:
        bigStorageName: example-bigstorage
        offsiteBackups: true
        size: 8
      properties:
        bigStorageName:
          description: The name of the bigstorage to upgrade
          type: string
        offsiteBackups:
          description: Whether to order offsite backups, omit this to use current
            value
          type: boolean
        size:
          description: The size of the big storage in TB's, use a multitude of 2.
            The maximum size is 40.
          type: number
      type: object
    inline_response_200_3_bigStorage:
      example:
        diskSize: 0.8008281904610115
        vpsName: vpsName
        isLocked: true
        name: name
        description: description
        offsiteBackups: true
        availabilityZone: availabilityZone
        status: status
      properties:
        availabilityZone:
          description: The availability zone the bigstorage is located in
          type: string
        description:
          description: Name that can be set by customer
          type: string
        diskSize:
          description: Disk size of the big storage in kB
          type: number
        isLocked:
          description: Lock status of the big storage, when it is locked, it cannot
            be attached or detached.
          type: boolean
        name:
          description: Name of the big storage
          type: string
        offsiteBackups:
          description: Whether a bigstorage has backups
          type: boolean
        status:
          description: Status of the big storage can be 'active', 'attaching' or 'detachting'
          type: string
        vpsName:
          description: The VPS that the big storage is attached to
          type: string
      required:
      - description
      - vpsName
    inline_response_200_3:
      example:
        bigStorage:
          diskSize: 0.8008281904610115
          vpsName: vpsName
          isLocked: true
          name: name
          description: description
          offsiteBackups: true
          availabilityZone: availabilityZone
          status: status
      properties:
        bigStorage:
          $ref: '#/components/schemas/inline_response_200_3_bigStorage'
    inline_object_1:
      example:
        bigStorage:
          availabilityZone: ams0
          description: Big storage description
          diskSize: 2147483648
          isLocked: false
          name: example-bigstorage
          offsiteBackups: true
          status: active
          vpsName: example-vps
      properties:
        bigStorage:
          $ref: '#/components/schemas/inline_response_200_3_bigStorage'
      type: object
    inline_object_2:
      example:
        endTime: end
      properties:
        endTime:
          description: Cancellation time, either 'end' or 'immediately'
          type: string
      type: object
    inline_response_200_4:
      example:
        backups:
        - ""
        - ""
      properties:
        backups:
          items: {}
          type: array
    inline_object_3:
      example:
        action: revert
      properties:
        action:
          type: string
      type: object
    inline_object_4:
      example:
        dateTimeEnd: 1490064468
        dateTimeStart: 1490023668
      properties:
        dateTimeEnd:
          description: The end date of the usage statistics
          type: number
        dateTimeStart:
          description: The start date of the usage statistics
          type: number
      type: object
    inline_response_200_5:
      example:
        usage:
        - ""
        - ""
      properties:
        usage:
          items: {}
          type: array
    inline_response_200_6:
      example:
        colocations:
        - ""
        - ""
      properties:
        colocations:
          items: {}
          type: array
    inline_response_200_7_colocation:
      example:
        ipRanges:
        - ""
        - ""
        name: name
      properties:
        ipRanges:
          description: List of IP ranges
          items: {}
          type: array
        name:
          description: Colocation name
          type: string
      required:
      - ipRanges
      - name
    inline_response_200_7:
      example:
        colocation:
          ipRanges:
          - ""
          - ""
          name: name
      properties:
        colocation:
          $ref: '#/components/schemas/inline_response_200_7_colocation'
    inline_response_200_8:
      example:
        ipAddresses:
        - ""
        - ""
      properties:
        ipAddresses:
          items: {}
          type: array
    inline_object_5:
      example:
        ipAddress: 2a01:7c8:3:1337::6
        reverseDns: example.com
      properties:
        ipAddress:
          description: The IP address to register to the colocation
          type: string
        reverseDns:
          description: Reverse DNS, also known as the PTR record
          type: string
      type: object
    inline_response_200_9_ipAddress:
      example:
        address: address
        reverseDns: reverseDns
        subnetMask: subnetMask
        dnsResolvers:
        - ""
        - ""
        gateway: gateway
      properties:
        address:
          description: The IP address
          type: string
        dnsResolvers:
          description: The TransIP DNS resolvers you can use
          items: {}
          type: array
        gateway:
          description: Gateway
          type: string
        reverseDns:
          description: Reverse DNS, also known as the PTR record
          type: string
        subnetMask:
          description: Subnet mask
          type: string
      required:
      - reverseDns
    inline_response_200_9:
      example:
        ipAddress:
          address: address
          reverseDns: reverseDns
          subnetMask: subnetMask
          dnsResolvers:
          - ""
          - ""
          gateway: gateway
      properties:
        ipAddress:
          $ref: '#/components/schemas/inline_response_200_9_ipAddress'
    _colocations__colocationName__ip_addresses__ipAddress__ipAddress:
      properties:
        address:
          description: The IP address
          type: string
        dnsResolvers:
          description: The TransIP DNS resolvers you can use
          type: array
        gateway:
          description: Gateway
          type: string
        reverseDns:
          description: Reverse DNS, also known as the PTR record
          type: string
        subnetMask:
          description: Subnet mask
          type: string
      required:
      - reverseDns
    inline_object_6:
      example:
        ipAddress:
          address: 37.97.254.6
          dnsResolvers:
          - 195.8.195.8
          - 195.135.195.135
          gateway: 37.97.254.1
          reverseDns: example.com
          subnetMask: 255.255.255.0
      properties:
        ipAddress:
          $ref: '#/components/schemas/_colocations__colocationName__ip_addresses__ipAddress__ipAddress'
      type: object
    _colocations__colocationName__remote_hands_remoteHands:
      properties:
        coloName:
          description: Name of the colocation contract
          type: string
        contactName:
          description: Name of the person that created the remote hands request
          type: string
        expectedDuration:
          description: Expected duration in minutes
          type: number
        instructions:
          description: The instructions for the datacenter engineer to perform
          type: string
        phoneNumber:
          description: Phonenumber to contact in case of questions regarding the remotehands
            request
          type: string
    inline_object_7:
      example:
        remoteHands:
          coloName: example2
          contactName: Herman Kaakdorst
          expectedDuration: 15
          instructions: Reboot server with label Loadbalancer0
          phoneNumber: +31 612345678
      properties:
        remoteHands:
          $ref: '#/components/schemas/_colocations__colocationName__remote_hands_remoteHands'
      type: object
    inline_object_8:
      example:
        domainNames:
        - example.com
        - example.nl
      properties:
        domainNames:
          description: array of domainNames to check
          type: array
      type: object
    inline_response_200_10:
      example:
        availability:
        - ""
        - ""
      properties:
        availability:
          items: {}
          type: array
    inline_response_200_11_availability:
      example:
        domainName: domainName
        actions:
        - ""
        - ""
        status: status
      properties:
        actions:
          description: 'List of available actions to perform on this domain. Possible
            actions are: ''register'', ''transfer'', ''internalpull'' and ''internalpush'''
          items: {}
          type: array
        domainName:
          description: The name of the domain
          type: string
        status:
          description: 'The status for this domain. Possible statuses are: ''inyouraccount'',
            ''unavailable'', ''notfree'', ''free'', ''internalpull'' and ''internalpush'''
          type: string
      required:
      - actions
      - domainName
      - status
    inline_response_200_11:
      example:
        availability:
          domainName: domainName
          actions:
          - ""
          - ""
          status: status
      properties:
        availability:
          $ref: '#/components/schemas/inline_response_200_11_availability'
    inline_response_200_12:
      example:
        domains:
        - ""
        - ""
      properties:
        domains:
          items: {}
          type: array
    inline_object_9:
      example:
        authCode: CYPMaVH+9MRjXGBc3InzHs7vNSUBPOjwpZm3GO+iDLHnFLtiP7sOKqW5JD1WeUpevZM6q1qS5YH9dGSp
        contacts:
        - city: Leiden
          companyKvk: "83057825"
          companyName: Example B.V.
          companyType: BV
          country: nl
          email: example@example.com
          faxNumber: +31 715241919
          firstName: John
          lastName: Doe
          number: "12"
          phoneNumber: +31 715241919
          postalCode: 1337 XD
          street: Easy street
          type: registrant
        dnsEntries:
        - content: 127.0.0.1
          expire: 86400
          name: www
          type: A
        domainName: example.com
        nameservers:
        - hostname: ns0.transip.nl
          ipv4: null
          ipv6: null
      properties:
        authCode:
          description: The auth code of the domain.
          type: string
        contacts:
          type: array
        dnsEntries:
          type: array
        domainName:
          type: string
        nameservers:
          type: array
      type: object
    inline_response_200_13_domain:
      example:
        authCode: authCode
        isDnsOnly: true
        isWhitelabel: true
        name: name
        registrationDate: registrationDate
        renewalDate: renewalDate
        isTransferLocked: true
        cancellationStatus: cancellationStatus
        tags:
        - ""
        - ""
        cancellationDate: cancellationDate
      properties:
        tags:
          description: The custom tags added to this domain.
          items: {}
          type: array
        authCode:
          description: The authcode for this domain as generated by the registry.
          nullable: true
          type: string
        cancellationDate:
          description: Cancellation data, in YYYY-mm-dd h:i:s format, null if the
            domain is active.
          nullable: true
          type: string
        cancellationStatus:
          description: Cancellation status, null if the domain is active, 'cancelled'
            when the domain is cancelled.
          nullable: true
          type: string
        isDnsOnly:
          description: Whether this domain is DNS only
          type: boolean
        isTransferLocked:
          description: If this domain supports transfer locking, this flag is true
            when the domains ability to transfer is locked at the registry.
          type: boolean
        isWhitelabel:
          description: If this domain is added to your whitelabel.
          type: boolean
        name:
          description: The name, including the tld of this domain
          type: string
        registrationDate:
          description: Registration date of the domain, in YYYY-mm-dd format.
          type: string
        renewalDate:
          description: Next renewal date of the domain, in YYYY-mm-dd format.
          type: string
      required:
      - isTransferLocked
      - isWhitelabel
      - name
      - tags
    inline_response_200_13:
      example:
        domain:
          authCode: authCode
          isDnsOnly: true
          isWhitelabel: true
          name: name
          registrationDate: registrationDate
          renewalDate: renewalDate
          isTransferLocked: true
          cancellationStatus: cancellationStatus
          tags:
          - ""
          - ""
          cancellationDate: cancellationDate
      properties:
        domain:
          $ref: '#/components/schemas/inline_response_200_13_domain'
    _domains__domainName__domain:
      properties:
        tags:
          description: The custom tags added to this domain.
          type: array
        authCode:
          description: The authcode for this domain as generated by the registry.
          nullable: true
          type: string
        cancellationDate:
          description: Cancellation data, in YYYY-mm-dd h:i:s format, null if the
            domain is active.
          nullable: true
          type: string
        cancellationStatus:
          description: Cancellation status, null if the domain is active, 'cancelled'
            when the domain is cancelled.
          nullable: true
          type: string
        isDnsOnly:
          description: Whether this domain is DNS only
          type: boolean
        isTransferLocked:
          description: If this domain supports transfer locking, this flag is true
            when the domains ability to transfer is locked at the registry.
          type: boolean
        isWhitelabel:
          description: If this domain is added to your whitelabel.
          type: boolean
        name:
          description: The name, including the tld of this domain
          type: string
        registrationDate:
          description: Registration date of the domain, in YYYY-mm-dd format.
          type: string
        renewalDate:
          description: Next renewal date of the domain, in YYYY-mm-dd format.
          type: string
      required:
      - isTransferLocked
      - isWhitelabel
      - name
      - tags
    inline_object_10:
      example:
        domain:
          tags:
          - customTag
          - anotherTag
          authCode: kJqfuOXNOYQKqh/jO4bYSn54YDqgAt1ksCe+ZG4Ud4nfpzw8qBsfR2JqAj7Ce12SxKcGD09v+yXd6lrm
          cancellationDate: 2020-01-01 12:00:00
          cancellationStatus: signed
          isDnsOnly: false
          isTransferLocked: false
          isWhitelabel: false
          name: example.com
          registrationDate: 2016-01-01
          renewalDate: 2020-01-01
      properties:
        domain:
          $ref: '#/components/schemas/_domains__domainName__domain'
      type: object
    inline_object_11:
      example:
        endTime: end
      properties:
        endTime:
          description: Cancellation time, either 'end' or 'immediately'
          type: string
      type: object
    inline_response_200_14_action:
      example:
        hasFailed: true
        name: name
        message: message
      properties:
        hasFailed:
          description: If this action has failed, this field will be true.
          type: boolean
        message:
          description: If this action has failed, this field will contain an descriptive
            message.
          type: string
        name:
          description: The name of this DomainAction.
          type: string
      required:
      - name
    inline_response_200_14:
      example:
        action:
          hasFailed: true
          name: name
          message: message
      properties:
        action:
          $ref: '#/components/schemas/inline_response_200_14_action'
    inline_object_12:
      example:
        contacts:
        - city: Leiden
          companyKvk: "83057825"
          companyName: Example B.V.
          companyType: BV
          country: nl
          email: example@example.com
          faxNumber: +31 715241919
          firstName: John
          lastName: Doe
          number: "12"
          phoneNumber: +31 715241919
          postalCode: 1337 XD
          street: Easy street
          type: registrant
        dnsEntries:
        - content: 127.0.0.1
          expire: 86400
          name: www
          type: A
        nameservers:
        - hostname: ns0.transip.nl
          ipv4: null
          ipv6: null
      properties:
        authCode:
          type: string
        contacts:
          type: array
        dnsEntries:
          type: array
        nameservers:
          type: array
      type: object
    inline_response_200_15_branding:
      example:
        supportEmail: supportEmail
        bannerLine3: bannerLine3
        bannerLine2: bannerLine2
        bannerLine1: bannerLine1
        companyName: companyName
        termsOfUsageUrl: termsOfUsageUrl
        companyUrl: companyUrl
      properties:
        bannerLine1:
          description: The first generic bannerLine displayed in whois-branded whois
            output.
          type: string
        bannerLine2:
          description: The second generic bannerLine displayed in whois-branded whois
            output.
          type: string
        bannerLine3:
          description: The third generic bannerLine displayed in whois-branded whois
            output.
          type: string
        companyName:
          description: The company name displayed in transfer-branded e-mails
          type: string
        companyUrl:
          description: The company url displayed in transfer-branded e-mails
          type: string
        supportEmail:
          description: The support email used for transfer-branded e-mails
          type: string
        termsOfUsageUrl:
          description: The terms of usage url as displayed in transfer-branded e-mails
          nullable: true
          type: string
      required:
      - bannerLine1
      - bannerLine2
      - bannerLine3
      - companyName
      - companyUrl
      - supportEmail
      - termsOfUsageUrl
    inline_response_200_15:
      example:
        branding:
          supportEmail: supportEmail
          bannerLine3: bannerLine3
          bannerLine2: bannerLine2
          bannerLine1: bannerLine1
          companyName: companyName
          termsOfUsageUrl: termsOfUsageUrl
          companyUrl: companyUrl
      properties:
        branding:
          $ref: '#/components/schemas/inline_response_200_15_branding'
    inline_object_13:
      example:
        branding:
          bannerLine1: Example B.V.
          bannerLine2: Example
          bannerLine3: http://www.example.com/products
          companyName: Example B.V.
          companyUrl: www.example.com
          supportEmail: admin@example.com
          termsOfUsageUrl: www.example.com/tou
      properties:
        branding:
          $ref: '#/components/schemas/inline_response_200_15_branding'
      type: object
    inline_response_200_16:
      example:
        contacts:
        - ""
        - ""
      properties:
        contacts:
          items: {}
          type: array
    inline_object_14:
      example:
        contacts:
        - city: Leiden
          companyKvk: "83057825"
          companyName: Example B.V.
          companyType: BV
          country: nl
          email: example@example.com
          faxNumber: +31 715241919
          firstName: John
          lastName: Doe
          number: "12"
          phoneNumber: +31 715241919
          postalCode: 1337 XD
          street: Easy street
          type: registrant
      properties:
        contacts:
          type: array
      type: object
    inline_response_200_17:
      example:
        dnsEntries:
        - ""
        - ""
      properties:
        dnsEntries:
          items: {}
          type: array
    inline_object_15:
      example:
        dnsEntries:
        - content: 127.0.0.1
          expire: 86400
          name: www
          type: A
      properties:
        dnsEntries:
          type: array
      type: object
    _domains__domainName__dns_dnsEntry:
      properties:
        content:
          description: The content of of the dns entry, for example '10 mail', '127.0.0.1'
            or 'www'
          type: string
        expire:
          description: The expiration period of the dns entry, in seconds. For example
            86400 for a day of expiration
          type: number
        name:
          description: The name of the dns entry, for example '@' or 'www'
          type: string
        type:
          description: The type of dns entry. Possbible types are 'A', 'AAAA', 'CNAME',
            'MX', 'NS', 'TXT', 'SRV', 'SSHFP' and 'TLSA'
          type: string
      required:
      - content
      - expire
      - name
      - type
    inline_object_16:
      example:
        dnsEntry:
          content: 127.0.0.1
          expire: 86400
          name: www
          type: A
      properties:
        dnsEntry:
          $ref: '#/components/schemas/_domains__domainName__dns_dnsEntry'
      type: object
    inline_object_17:
      example:
        dnsEntry:
          content: 127.0.0.1
          expire: 86400
          name: www
          type: A
      properties:
        dnsEntry:
          $ref: '#/components/schemas/_domains__domainName__dns_dnsEntry'
      type: object
    inline_object_18:
      example:
        dnsEntry:
          content: 127.0.0.1
          expire: 86400
          name: www
          type: A
      properties:
        dnsEntry:
          $ref: '#/components/schemas/_domains__domainName__dns_dnsEntry'
      type: object
    inline_response_200_18:
      example:
        dnsSecEntries:
        - ""
        - ""
      properties:
        dnsSecEntries:
          items: {}
          type: array
    inline_object_19:
      example:
        dnsSecEntries:
        - algorithm: 8
          flags: 1
          keyTag: 67239
          publicKey: AwEAAc31XDE3QWphFz6CR77Hp3ZjDRx7zqe1AXx1QMvqFKzrEKrX4oj2nv8zDquCotbQ1ObHI4KGLRf3ycaq0fYslXFJ1JxLxJUl/lpGvE8OkqdhGW3vj3YS9Mlbf0yYC2bNUY875UgDNRLqWtVSEXO/PCcqr3RIzpngu+6JF/1bfQB7ituFHxoanhAiWOpc24ZAnrhmyIsDwyy1k0iyvVTSyPugnYD/bF7CR7ObQCiuucjwCkSBHJ4gcihHvyPDU/DlsSJeEO/G31zFxzXwHjr3h3mdJE4mQuceS11e5/c9hht6rUL0PEGve1Ygknz+0ruAinlhFYnny2uxES5M9r0FIM=
      properties:
        dnsSecEntries:
          type: array
      type: object
    inline_response_200_19:
      example:
        nameservers:
        - ""
        - ""
      properties:
        nameservers:
          items: {}
          type: array
    inline_object_20:
      example:
        nameservers:
        - hostname: ns0.transip.nl
          ipv4: null
          ipv6: null
      properties:
        nameservers:
          type: array
      type: object
    inline_response_200_20:
      example:
        certificates:
        - ""
        - ""
      properties:
        certificates:
          items: {}
          type: array
    inline_response_200_21_certificate:
      example:
        commonName: commonName
        certificateId: 0.8008281904610115
        expirationDate: expirationDate
        status: status
      properties:
        certificateId:
          description: The id of the certificate, can be used to retrieve additional
            info
          type: number
        commonName:
          description: The domain name that the SSL certificate is added to. Start
            with '*.' when the certificate is a wildcard.
          type: string
        expirationDate:
          description: Expiration date
          type: string
        status:
          description: The current status, either 'active', 'inactive' or 'expired'
          type: string
      required:
      - certificateId
      - commonName
      - expirationDate
      - status
    inline_response_200_21:
      example:
        certificate:
          commonName: commonName
          certificateId: 0.8008281904610115
          expirationDate: expirationDate
          status: status
      properties:
        certificate:
          $ref: '#/components/schemas/inline_response_200_21_certificate'
    inline_response_200_22:
      example:
        whois: whois
      properties:
        whois:
          type: string
    inline_response_200_23:
      example:
        haips:
        - ""
        - ""
      properties:
        haips:
          items: {}
          type: array
    inline_object_21:
      example:
        description: myhaip01
        productName: haip-pro-contract
      properties:
        description:
          description: Optional description for the the HA-IP, this you can use to
            identify your HA-IP once created
          type: string
        productName:
          description: Required HA-IP product name to order
          type: string
      type: object
    inline_response_200_24_haip:
      example:
        ipv6Address: ipv6Address
        ipv4Address: ipv4Address
        description: description
        stickyCookieName: stickyCookieName
        healthCheckInterval: 0.8008281904610115
        httpHealthCheckSsl: true
        loadBalancingMode: loadBalancingMode
        ptrRecord: ptrRecord
        httpHealthCheckPort: 6.027456183070403
        ipSetup: ipSetup
        isLoadBalancingEnabled: true
        name: name
        ipAddresses:
        - ""
        - ""
        httpHealthCheckPath: httpHealthCheckPath
        status: status
      properties:
        description:
          description: The description that can be set by the customer
          type: string
        healthCheckInterval:
          description: The interval in milliseconds at which health checks are performed.
            The interval may not be smaller than 2000ms.
          type: number
        httpHealthCheckPath:
          description: The path (URI) of the page to check HTTP status code on
          type: string
        httpHealthCheckPort:
          description: The port to perform the HTTP check on
          type: number
        httpHealthCheckSsl:
          description: Whether to use SSL when performing the HTTP check
          type: boolean
        ipAddresses:
          description: The IPs attached to this haip
          items: {}
          type: array
        ipSetup:
          description: 'HA-IP IP setup: ''both'', ''noipv6'', ''ipv6to4'''
          type: string
        ipv4Address:
          description: HA-IP IPv4 address
          type: string
        ipv6Address:
          description: HA-IP IPv6 address
          type: string
        isLoadBalancingEnabled:
          description: Whether load balancing is enabled for this HA-IP
          type: boolean
        loadBalancingMode:
          description: 'HA-IP load balancing mode: ''roundrobin'', ''cookie'', ''source'''
          type: string
        name:
          description: HA-IP name
          type: string
        ptrRecord:
          description: The PTR record for the HA-IP
          type: string
        status:
          description: HA-IP status, either 'active', 'inactive', 'creating'
          type: string
        stickyCookieName:
          description: Cookie name to pin sessions on when using cookie balancing
            mode
          type: string
    inline_response_200_24:
      example:
        haip:
          ipv6Address: ipv6Address
          ipv4Address: ipv4Address
          description: description
          stickyCookieName: stickyCookieName
          healthCheckInterval: 0.8008281904610115
          httpHealthCheckSsl: true
          loadBalancingMode: loadBalancingMode
          ptrRecord: ptrRecord
          httpHealthCheckPort: 6.027456183070403
          ipSetup: ipSetup
          isLoadBalancingEnabled: true
          name: name
          ipAddresses:
          - ""
          - ""
          httpHealthCheckPath: httpHealthCheckPath
          status: status
      properties:
        haip:
          $ref: '#/components/schemas/inline_response_200_24_haip'
    _haips__haipName__haip:
      properties:
        description:
          description: The description that can be set by the customer
          type: string
        healthCheckInterval:
          description: The interval in milliseconds at which health checks are performed.
            The interval may not be smaller than 2000ms.
          type: number
        httpHealthCheckPath:
          description: The path (URI) of the page to check HTTP status code on
          type: string
        httpHealthCheckPort:
          description: The port to perform the HTTP check on
          type: number
        httpHealthCheckSsl:
          description: Whether to use SSL when performing the HTTP check
          type: boolean
        ipAddresses:
          description: The IPs attached to this haip
          type: array
        ipSetup:
          description: 'HA-IP IP setup: ''both'', ''noipv6'', ''ipv6to4'''
          type: string
        ipv4Address:
          description: HA-IP IPv4 address
          type: string
        ipv6Address:
          description: HA-IP IPv6 address
          type: string
        isLoadBalancingEnabled:
          description: Whether load balancing is enabled for this HA-IP
          type: boolean
        loadBalancingMode:
          description: 'HA-IP load balancing mode: ''roundrobin'', ''cookie'', ''source'''
          type: string
        name:
          description: HA-IP name
          type: string
        ptrRecord:
          description: The PTR record for the HA-IP
          type: string
        status:
          description: HA-IP status, either 'active', 'inactive', 'creating'
          type: string
        stickyCookieName:
          description: Cookie name to pin sessions on when using cookie balancing
            mode
          type: string
    inline_object_22:
      example:
        haip:
          description: frontend cluster
          healthCheckInterval: 3000
          httpHealthCheckPath: /status.php
          httpHealthCheckPort: 443
          httpHealthCheckSsl: true
          ipAddresses:
          - 10.3.37.1
          - 10.3.38.1
          ipSetup: ipv6to4
          ipv4Address: 37.97.254.7
          ipv6Address: 2a01:7c8:3:1337::1
          isLoadBalancingEnabled: true
          loadBalancingMode: cookie
          name: example-haip
          ptrRecord: frontend.example.com
          status: active
          stickyCookieName: PHPSESSID
      properties:
        haip:
          $ref: '#/components/schemas/_haips__haipName__haip'
      type: object
    inline_object_23:
      example:
        endTime: end
      properties:
        endTime:
          description: Cancellation time, either 'end' or 'immediately'
          type: string
      type: object
    inline_object_24:
      example:
        commonName: foobar.example.com
      properties:
        commonName:
          description: The domain name that the SSL certificate is added to. Start
            with ‘*.’ when the certificate is a wildcard
          type: string
      type: object
    inline_response_200_25:
      example:
        ipAddresses:
        - ""
        - ""
      properties:
        ipAddresses:
          description: List of IP addresses attached to this HA-IP
          items: {}
          type: array
    inline_object_25:
      example:
        ipAddresses:
        - 149.13.3.7
        - 149.31.33.7
      properties:
        ipAddresses:
          description: Set of IP addresses to attach, replaces the current set of
            IP addresses
          type: array
      type: object
    inline_response_200_26:
      example:
        portConfigurations:
        - ""
        - ""
      properties:
        portConfigurations:
          items: {}
          type: array
    inline_object_26:
      example:
        endpointSslMode: "on"
        mode: https
        name: Website Traffic
        sourcePort: 443
        targetPort: 443
      properties:
        endpointSslMode:
          description: 'The mode determining how traffic between our load balancers
            and your VPS is protected: ‘off’, ‘on’, ‘strict’'
          type: string
        mode:
          description: 'The mode determining how traffic is processed and forwarded:
            ‘tcp’, ‘http’, ‘https’, ‘proxy’'
          type: string
        name:
          description: Name of the port configuration
          type: string
        sourcePort:
          description: The port at which traffic arrives on your HA-IP
          type: number
        targetPort:
          description: The port at which traffic arrives on your attached IP address(es)
          type: number
      type: object
    inline_response_200_27_portConfiguration:
      example:
        mode: mode
        sourcePort: 6.027456183070403
        name: name
        id: 0.8008281904610115
        endpointSslMode: endpointSslMode
        targetPort: 1.4658129805029452
      properties:
        endpointSslMode:
          description: 'The mode determining how traffic between our load balancers
            and your attached IP address(es) is encrypted: ''off'', ''on'', ''strict'''
          type: string
        id:
          description: The port configuration Id
          type: number
        mode:
          description: 'The mode determining how traffic is processed and forwarded:
            ''tcp'', ''http'', ''https'', ''proxy'''
          type: string
        name:
          description: A name describing the port
          type: string
        sourcePort:
          description: The port at which traffic arrives on your HA-IP
          type: number
        targetPort:
          description: The port at which traffic arrives on your attached IP address(es)
          type: number
      required:
      - endpointSslMode
      - mode
      - name
      - sourcePort
      - targetPort
    inline_response_200_27:
      example:
        portConfiguration:
          mode: mode
          sourcePort: 6.027456183070403
          name: name
          id: 0.8008281904610115
          endpointSslMode: endpointSslMode
          targetPort: 1.4658129805029452
      properties:
        portConfiguration:
          $ref: '#/components/schemas/inline_response_200_27_portConfiguration'
    inline_object_27:
      example:
        portConfiguration:
          endpointSslMode: "off"
          id: 9865
          mode: http
          name: Website Traffic
          sourcePort: 80
          targetPort: 80
      properties:
        portConfiguration:
          $ref: '#/components/schemas/inline_response_200_27_portConfiguration'
      type: object
    inline_response_200_28:
      example:
        statusReport:
        - ""
        - ""
      properties:
        statusReport:
          items: {}
          type: array
    inline_response_200_29:
      example:
        invoices:
        - ""
        - ""
      properties:
        invoices:
          items: {}
          type: array
    inline_response_200_30_invoice:
      example:
        totalAmount: 0.8008281904610115
        dueDate: dueDate
        invoiceNumber: invoiceNumber
        currency: currency
        creationDate: creationDate
        invoiceStatus: invoiceStatus
        totalAmountInclVat: 6.027456183070403
        payDate: payDate
      properties:
        creationDate:
          description: Invoice creation date
          type: string
        currency:
          description: Currency used for this invoice
          type: string
        dueDate:
          description: Invoice deadline
          type: string
        invoiceNumber:
          description: Invoice number
          type: string
        invoiceStatus:
          description: Invoice status
          type: string
        payDate:
          description: Invoice paid date
          type: string
        totalAmount:
          description: Invoice total (displayed in cents)
          type: number
        totalAmountInclVat:
          description: Invoice total including VAT (displayed in cents)
          type: number
      required:
      - creationDate
      - currency
      - dueDate
      - invoiceNumber
      - invoiceStatus
      - payDate
      - totalAmount
      - totalAmountInclVat
    inline_response_200_30:
      example:
        invoice:
          totalAmount: 0.8008281904610115
          dueDate: dueDate
          invoiceNumber: invoiceNumber
          currency: currency
          creationDate: creationDate
          invoiceStatus: invoiceStatus
          totalAmountInclVat: 6.027456183070403
          payDate: payDate
      properties:
        invoice:
          $ref: '#/components/schemas/inline_response_200_30_invoice'
    inline_response_200_31:
      example:
        invoiceItems:
        - ""
        - ""
      properties:
        invoiceItems:
          items: {}
          type: array
    inline_response_200_32:
      example:
        pdf: pdf
      properties:
        pdf:
          type: string
    inline_response_200_33_mailServiceInformation:
      example:
        password: password
        quota: 0.8008281904610115
        usage: 6.027456183070403
        dnsTxt: dnsTxt
        username: username
      properties:
        dnsTxt:
          description: x-transip-mail-auth DNS TXT record Value
          type: string
        password:
          description: The password of the mail service
          type: string
        quota:
          description: The quota of the mail service
          type: number
        usage:
          description: The usage of the mail service
          type: number
        username:
          description: The username of the mail service
          type: string
    inline_response_200_33:
      example:
        mailServiceInformation:
          password: password
          quota: 0.8008281904610115
          usage: 6.027456183070403
          dnsTxt: dnsTxt
          username: username
      properties:
        mailServiceInformation:
          $ref: '#/components/schemas/inline_response_200_33_mailServiceInformation'
    inline_object_28:
      example:
        domainNames:
        - example.com
        - another.com
      properties:
        domainNames:
          description: The domain names to which the DNS entries should be added
          type: array
      type: object
    inline_response_200_34_contact:
      example:
        name: name
        telephone: telephone
        id: 0.8008281904610115
        email: email
      properties:
        email:
          description: Email address of the contact
          type: string
        id:
          description: Id number of the contact
          type: number
        name:
          description: Name of the contact
          type: string
        telephone:
          description: Telephone number of the contact
          type: string
      required:
      - email
      - id
      - name
      - telephone
    inline_response_200_34:
      example:
        contact:
          name: name
          telephone: telephone
          id: 0.8008281904610115
          email: email
      properties:
        contact:
          $ref: '#/components/schemas/inline_response_200_34_contact'
    inline_object_29:
      example:
        email: j.wick@example.com
        name: John Wick
        telephone: +31612345678
      properties:
        email:
          description: Email address of the contact
          type: string
        name:
          description: Name of the contact
          type: string
        telephone:
          description: Telephone number of the contact
          type: string
      type: object
    inline_object_30:
      example:
        contact:
          email: j.wick@example.com
          id: 1
          name: John Wick
          telephone: +31612345678
      properties:
        contact:
          $ref: '#/components/schemas/inline_response_200_34_contact'
      type: object
    inline_response_200_35:
      example:
        privateNetworks:
        - ""
        - ""
      properties:
        privateNetworks:
          items: {}
          type: array
    inline_object_31:
      example: {}
      properties:
        description:
          type: string
      type: object
    inline_response_200_36_privateNetwork:
      example:
        vpsNames:
        - ""
        - ""
        isLocked: true
        isBlocked: true
        name: name
        description: description
      properties:
        description:
          description: The custom name that can be set by customer
          type: string
        isBlocked:
          description: If the Private Network is administratively blocked
          type: boolean
        isLocked:
          description: When locked, another process is already working with this private
            network
          type: boolean
        name:
          description: The unique private network name
          type: string
        vpsNames:
          description: The VPSes in this private network
          items: {}
          type: array
      required:
      - description
      - vpsNames
    inline_response_200_36:
      example:
        privateNetwork:
          vpsNames:
          - ""
          - ""
          isLocked: true
          isBlocked: true
          name: name
          description: description
      properties:
        privateNetwork:
          $ref: '#/components/schemas/inline_response_200_36_privateNetwork'
    _private_networks__privateNetworkName__privateNetwork:
      properties:
        description:
          description: The custom name that can be set by customer
          type: string
        isBlocked:
          description: If the Private Network is administratively blocked
          type: boolean
        isLocked:
          description: When locked, another process is already working with this private
            network
          type: boolean
        name:
          description: The unique private network name
          type: string
        vpsNames:
          description: The VPSes in this private network
          type: array
      required:
      - description
      - vpsNames
    inline_object_32:
      example:
        privateNetwork:
          description: FilesharingNetwork
          isBlocked: false
          isLocked: false
          name: example-privatenetwork
          vpsNames:
          - example-vps
          - example-vps2
      properties:
        privateNetwork:
          $ref: '#/components/schemas/_private_networks__privateNetworkName__privateNetwork'
      type: object
    inline_object_33:
      example:
        endTime: end
      properties:
        endTime:
          description: Cancellation time, either 'end' (default) or 'immediately'
          type: string
      type: object
    inline_object_34:
      example:
        action: detachvps
        vpsName: example-vps
      properties:
        action:
          type: string
        vpsName:
          description: Name of the vps that you want to detach
          type: string
      type: object
    inline_response_200_37_products:
      example:
        haip:
        - ""
        - ""
        vpsAddon:
        - ""
        - ""
        vps:
        - ""
        - ""
        bigStorage:
        - ""
        - ""
        privateNetworks:
        - ""
        - ""
      properties:
        bigStorage:
          description: A list of big storage products
          items: {}
          type: array
        haip:
          description: A list of haip products
          items: {}
          type: array
        privateNetworks:
          description: A list of private network products
          items: {}
          type: array
        vps:
          description: A list of vps products
          items: {}
          type: array
        vpsAddon:
          description: A list of vps addons
          items: {}
          type: array
    inline_response_200_37:
      example:
        products:
          haip:
          - ""
          - ""
          vpsAddon:
          - ""
          - ""
          vps:
          - ""
          - ""
          bigStorage:
          - ""
          - ""
          privateNetworks:
          - ""
          - ""
      properties:
        products:
          $ref: '#/components/schemas/inline_response_200_37_products'
    inline_response_200_38:
      example:
        productElements:
        - ""
        - ""
      properties:
        productElements:
          items: {}
          type: array
    inline_response_200_39:
      example:
        tlds:
        - ""
        - ""
      properties:
        tlds:
          items: {}
          type: array
    inline_response_200_40_tld:
      example:
        registrationPeriodLength: 2.3021358869347655
        capabilities:
        - ""
        - ""
        price: 5.962133916683182
        minLength: 1.4658129805029452
        name: name
        recurringPrice: 5.637376656633329
        maxLength: 6.027456183070403
        cancelTimeFrame: 0.8008281904610115
      properties:
        cancelTimeFrame:
          description: Number of days a domain needs to be canceled before the renewal
            date.
          type: number
        capabilities:
          description: 'A list of the capabilities that this Tld has (the things that
            can be done with a domain under this tld). Possible capabilities are:
            ''requiresAuthCode'', ''canRegister'', ''canTransferWithOwnerChange'',
            ''canTransferWithoutOwnerChange'', ''canSetLock'', ''canSetOwner'', ''canSetContacts'',
            ''canSetNameservers'', ''supportsDnsSec'''
          items: {}
          type: array
        maxLength:
          description: The maximum amount of characters need for registering a domain
            under this TLD.
          type: number
        minLength:
          description: The minimum amount of characters need for registering a domain
            under this TLD.
          type: number
        name:
          description: The name of this TLD, including the starting dot. E.g. .nl
            or .com.
          type: string
        price:
          description: Price of the TLD in cents
          type: number
        recurringPrice:
          description: Price for renewing the TLD in cents
          type: number
        registrationPeriodLength:
          description: Length in months of each registration or renewal period.
          type: number
      required:
      - name
    inline_response_200_40:
      example:
        tld:
          registrationPeriodLength: 2.3021358869347655
          capabilities:
          - ""
          - ""
          price: 5.962133916683182
          minLength: 1.4658129805029452
          name: name
          recurringPrice: 5.637376656633329
          maxLength: 6.027456183070403
          cancelTimeFrame: 0.8008281904610115
      properties:
        tld:
          $ref: '#/components/schemas/inline_response_200_40_tld'
    inline_response_200_41_trafficInformation:
      example:
        usedTotalBytes: 1.4658129805029452
        endDate: endDate
        maxInBytes: 0.8008281904610115
        usedInBytes: 6.027456183070403
        startDate: startDate
      properties:
        endDate:
          description: The end date in 'Y-m-d' format
          type: string
        maxInBytes:
          description: The maximum amount of bytes that can be used in this period
          type: number
        startDate:
          description: The start date in 'Y-m-d' format
          type: string
        usedInBytes:
          description: The usage in bytes for this period
          type: number
        usedTotalBytes:
          description: The usage in bytes
          type: number
      required:
      - endDate
      - maxInBytes
      - startDate
      - usedInBytes
      - usedTotalBytes
    inline_response_200_41:
      example:
        trafficInformation:
          usedTotalBytes: 1.4658129805029452
          endDate: endDate
          maxInBytes: 0.8008281904610115
          usedInBytes: 6.027456183070403
          startDate: startDate
      properties:
        trafficInformation:
          $ref: '#/components/schemas/inline_response_200_41_trafficInformation'
    inline_response_200_42:
      example:
        vpss:
        - ""
        - ""
      properties:
        vpss:
          items: {}
          type: array
    inline_object_35:
      example:
        availabilityZone: ams0
        vpsName: example-vps
      properties:
        availabilityZone:
          description: The name of the availability zone where the clone should be
            created
          type: string
        vpsName:
          description: The vps name of the VPS to clone.
          type: string
      type: object
    inline_response_200_43_vps:
      example:
        maxSnapshots: 5.962133916683182
        cpus: 0.8008281904610115
        isCustomerLocked: true
        ipAddress: ipAddress
        isBlocked: true
        description: description
        availabilityZone: availabilityZone
        operatingSystem: operatingSystem
        productName: productName
        tags:
        - ""
        - ""
        diskSize: 1.4658129805029452
        macAddress: macAddress
        memorySize: 5.637376656633329
        currentSnapshots: 6.027456183070403
        isLocked: true
        name: name
        status: status
      properties:
        tags:
          description: The custom tags added to this VPS
          items: {}
          type: array
        availabilityZone:
          description: The name of the availability zone the VPS is in
          type: string
        cpus:
          description: The VPS cpu count
          type: number
        currentSnapshots:
          description: The amount of snapshots that is used on this VPS
          type: number
        description:
          description: The name that can be set by customer
          nullable: true
          type: string
        diskSize:
          description: The VPS disk size in kB
          type: number
        ipAddress:
          description: The VPS main ipAddress
          type: string
        isBlocked:
          description: If the VPS is administratively blocked
          type: boolean
        isCustomerLocked:
          description: If this VPS is locked by the customer
          type: boolean
        isLocked:
          description: Whether or not another process is already doing stuff with
            this VPS
          type: boolean
        macAddress:
          description: The VPS macaddress
          type: string
        maxSnapshots:
          description: The maximum amount of snapshots for this VPS
          type: number
        memorySize:
          description: The VPS memory size in kB
          type: number
        name:
          description: The unique VPS name
          type: string
        operatingSystem:
          description: The VPS OperatingSystem
          nullable: true
          type: string
        productName:
          description: The product name
          type: string
        status:
          description: The VPS status, either 'created', 'installing', 'running',
            'stopped' or 'paused'
          type: string
      required:
      - name
      - tags
    inline_response_200_43:
      example:
        vps:
          maxSnapshots: 5.962133916683182
          cpus: 0.8008281904610115
          isCustomerLocked: true
          ipAddress: ipAddress
          isBlocked: true
          description: description
          availabilityZone: availabilityZone
          operatingSystem: operatingSystem
          productName: productName
          tags:
          - ""
          - ""
          diskSize: 1.4658129805029452
          macAddress: macAddress
          memorySize: 5.637376656633329
          currentSnapshots: 6.027456183070403
          isLocked: true
          name: name
          status: status
      properties:
        vps:
          $ref: '#/components/schemas/inline_response_200_43_vps'
    _vps__vpsName__vps:
      properties:
        tags:
          description: The custom tags added to this VPS
          type: array
        availabilityZone:
          description: The name of the availability zone the VPS is in
          type: string
        cpus:
          description: The VPS cpu count
          type: number
        currentSnapshots:
          description: The amount of snapshots that is used on this VPS
          type: number
        description:
          description: The name that can be set by customer
          nullable: true
          type: string
        diskSize:
          description: The VPS disk size in kB
          type: number
        ipAddress:
          description: The VPS main ipAddress
          type: string
        isBlocked:
          description: If the VPS is administratively blocked
          type: boolean
        isCustomerLocked:
          description: If this VPS is locked by the customer
          type: boolean
        isLocked:
          description: Whether or not another process is already doing stuff with
            this VPS
          type: boolean
        macAddress:
          description: The VPS macaddress
          type: string
        maxSnapshots:
          description: The maximum amount of snapshots for this VPS
          type: number
        memorySize:
          description: The VPS memory size in kB
          type: number
        name:
          description: The unique VPS name
          type: string
        operatingSystem:
          description: The VPS OperatingSystem
          nullable: true
          type: string
        productName:
          description: The product name
          type: string
        status:
          description: The VPS status, either 'created', 'installing', 'running',
            'stopped' or 'paused'
          type: string
      required:
      - name
      - tags
    inline_object_36:
      example:
        vps:
          tags:
          - customTag
          - anotherTag
          availabilityZone: ams0
          cpus: 2
          currentSnapshots: 1
          description: example VPS
          diskSize: 157286400
          ipAddress: 37.97.254.6
          isBlocked: false
          isCustomerLocked: false
          isLocked: false
          macAddress: 52:54:00:3b:52:65
          maxSnapshots: 10
          memorySize: 4194304
          name: example-vps
          operatingSystem: ubuntu-18.04
          productName: vps-bladevps-x1
          status: running
      properties:
        vps:
          $ref: '#/components/schemas/_vps__vpsName__vps'
      type: object
    inline_object_37:
      example:
        endTime: end
      properties:
        endTime:
          description: Cancellation time, either 'end' (default) or 'immediately'
          type: string
      type: object
    inline_object_38:
      example:
        action: handover
        targetCustomerName: example2
      properties:
        action:
          type: string
        targetCustomerName:
          type: string
      type: object
    inline_response_200_44_addons:
      example:
        available:
        - ""
        - ""
        active:
        - ""
        - ""
        cancellable:
        - ""
        - ""
      properties:
        active:
          description: A list of non cancellable active addons
          items: {}
          type: array
        available:
          description: A list of available addons that you can order
          items: {}
          type: array
        cancellable:
          description: A list of addons that you can cancel
          items: {}
          type: array
    inline_response_200_44:
      example:
        addons:
          available:
          - ""
          - ""
          active:
          - ""
          - ""
          cancellable:
          - ""
          - ""
      properties:
        addons:
          $ref: '#/components/schemas/inline_response_200_44_addons'
    inline_object_39:
      example:
        addons:
        - vps-addon-1-extra-ip-address
      properties:
        addons:
          description: Addons to be added
          type: array
      type: object
    inline_object_40:
      example:
        action: convert
        description: BeforeItsAllBroken
      properties:
        action:
          type: string
        description:
          type: string
      type: object
    inline_response_200_45_vpsFirewall:
      example:
        isEnabled: true
        ruleSet:
        - ""
        - ""
      properties:
        isEnabled:
          description: Whether the firewall is enabled for this VPS
          type: boolean
        ruleSet:
          description: Ruleset of the VPS
          items: {}
          type: array
      required:
      - isEnabled
      - ruleSet
    inline_response_200_45:
      example:
        vpsFirewall:
          isEnabled: true
          ruleSet:
          - ""
          - ""
      properties:
        vpsFirewall:
          $ref: '#/components/schemas/inline_response_200_45_vpsFirewall'
    _vps__vpsName__firewall_vpsFirewall:
      properties:
        isEnabled:
          description: Whether the firewall is enabled for this VPS
          type: boolean
        ruleSet:
          description: Ruleset of the VPS
          type: array
      required:
      - isEnabled
      - ruleSet
    inline_object_41:
      example:
        vpsFirewall:
          isEnabled: true
          ruleSet:
          - description: HTTP
            endPort: 80
            protocol: tcp
            startPort: 80
            whitelist:
            - 80.69.69.80/32
            - 80.69.69.100/32
            - 2a01:7c8:3:1337::1/128
      properties:
        vpsFirewall:
          $ref: '#/components/schemas/_vps__vpsName__firewall_vpsFirewall'
      type: object
    inline_object_42:
      example:
        ipAddress: 2a01:7c8:3:1337::6
      properties:
        ipAddress:
          type: string
      type: object
    inline_object_43:
      example:
        ipAddress:
          address: 37.97.254.6
          dnsResolvers:
          - 195.8.195.8
          - 195.135.195.135
          gateway: 37.97.254.1
          reverseDns: example.com
          subnetMask: 255.255.255.0
      properties:
        ipAddress:
          $ref: '#/components/schemas/_colocations__colocationName__ip_addresses__ipAddress__ipAddress'
      type: object
    inline_response_200_46:
      example:
        operatingSystems:
        - ""
        - ""
      properties:
        operatingSystems:
          items: {}
          type: array
    inline_object_44:
      example:
        operatingSystemName: ubuntu-18.04
      properties:
        base64InstallText:
          description: Base64 encoded preseed / kickstart instructions, when installing
            unattended
          type: string
        hostname:
          description: Hostname is required for preinstallable web controlpanels
          type: string
        operatingSystemName:
          description: The name of the operating system
          type: string
      type: object
    inline_response_200_47:
      example:
        snapshots:
        - ""
        - ""
      properties:
        snapshots:
          items: {}
          type: array
    inline_object_45:
      example:
        description: BeforeItsAllBroken
        shouldStartVps: true
      properties:
        description:
          type: string
        shouldStartVps:
          description: Specify whether the VPS should be started immediately after
            the snapshot was created, default is `true`
          type: boolean
      type: object
    inline_response_200_48_snapshot:
      example:
        diskSize: 0.8008281904610115
        name: name
        description: description
        dateTimeCreate: dateTimeCreate
        operatingSystem: operatingSystem
        status: status
      properties:
        dateTimeCreate:
          description: The snapshot creation date
          type: string
        description:
          description: The snapshot description
          type: string
        diskSize:
          description: The size of the snapshot in kB
          type: number
        name:
          description: The snapshot name
          type: string
        operatingSystem:
          description: The snapshot OperatingSystem
          type: string
        status:
          description: The snapshot status ('active', 'creating', 'reverting', 'deleting',
            'pendingDeletion', 'syncing', 'moving')
          type: string
    inline_response_200_48:
      example:
        snapshot:
          diskSize: 0.8008281904610115
          name: name
          description: description
          dateTimeCreate: dateTimeCreate
          operatingSystem: operatingSystem
          status: status
      properties:
        snapshot:
          $ref: '#/components/schemas/inline_response_200_48_snapshot'
    inline_object_46:
      example:
        destinationVpsName: example-vps
      properties:
        destinationVpsName:
          description: When set, revert the snapshot to this VPS
          type: string
      type: object
    inline_response_200_49:
      example:
        tcpMonitors:
        - ""
        - ""
      properties:
        tcpMonitors:
          items: {}
          type: array
    _vps__vpsName__tcp_monitors_tcpMonitor:
      properties:
        allowedTimeouts:
          description: Allowed time outs (numbers 1-5)
          type: number
        contacts:
          description: Contact that will be notified for this monitor
          type: array
        ignoreTimes:
          description: The hours when the TCP monitoring is ignored (no notifications
            are sent out)
          type: array
        interval:
          description: Checking interval in minutes (numbers 1-6)
          type: number
        ipAddress:
          description: IP Address that is monitored
          type: string
        label:
          description: Title of the monitor
          type: string
        ports:
          description: Ports that are monitored
          type: array
      required:
      - allowedTimeouts
      - contacts
      - ignoreTimes
      - interval
      - ipAddress
      - label
      - ports
    inline_object_47:
      example:
        tcpMonitor:
          allowedTimeouts: 1
          contacts:
          - enableEmail: true
            enableSMS: false
            id: 1
          ignoreTimes:
          - timeFrom: 18:00
            timeTo: 08:30
          interval: 6
          ipAddress: 10.3.37.1
          label: HTTP
          ports:
          - 80
          - 443
      properties:
        tcpMonitor:
          $ref: '#/components/schemas/_vps__vpsName__tcp_monitors_tcpMonitor'
      type: object
    inline_object_48:
      example:
        tcpMonitor:
          allowedTimeouts: 1
          contacts:
          - enableEmail: true
            enableSMS: false
            id: 1
          ignoreTimes:
          - timeFrom: 18:00
            timeTo: 08:30
          interval: 6
          ipAddress: 10.3.37.1
          label: HTTP
          ports:
          - 80
          - 443
      properties:
        tcpMonitor:
          $ref: '#/components/schemas/_vps__vpsName__tcp_monitors_tcpMonitor'
      type: object
    inline_response_200_50:
      example:
        upgrades:
        - ""
        - ""
      properties:
        upgrades:
          items: {}
          type: array
    inline_object_49:
      example:
        productName: vps-bladevps-pro-x16
      properties:
        productName:
          type: string
      type: object
    inline_object_50:
      example:
        dateTimeEnd: 1500542619
        dateTimeStart: 1500538995
        types: cpu,disk,network
      properties:
        dateTimeEnd:
          description: The end date of the usage statistics
          type: number
        dateTimeStart:
          description: The start date of the usage statistics
          type: number
        types:
          description: The types of statistics that can be returned, `cpu`, `disk`
            and `network` can be specified in a comma seperated way. If not specified,
            all data will be returned.
          type: string
      type: object
    inline_response_200_51_usage:
      example:
        disk:
        - ""
        - ""
        cpu:
        - ""
        - ""
        network:
        - ""
        - ""
      properties:
        cpu:
          items: {}
          type: array
        disk:
          items: {}
          type: array
        network:
          items: {}
          type: array
      required:
      - cpu
      - disk
      - network
    inline_response_200_51:
      example:
        usage:
          disk:
          - ""
          - ""
          cpu:
          - ""
          - ""
          network:
          - ""
          - ""
      properties:
        usage:
          $ref: '#/components/schemas/inline_response_200_51_usage'
    inline_response_200_52_vncData:
      example:
        path: path
        password: password
        host: host
        url: url
        token: token
      properties:
        host:
          description: Location of the VNC Proxy
          type: string
        password:
          description: Password to setup up the VNC connection (changes dynamically)
          type: string
        path:
          description: Websocket path including the token
          type: string
        token:
          description: Token to identify the VPS to connect to (changes dynamically)
          type: string
        url:
          description: Complete websocket URL
          type: string
    inline_response_200_52:
      example:
        vncData:
          path: path
          password: password
          host: host
          url: url
          token: token
      properties:
        vncData:
          $ref: '#/components/schemas/inline_response_200_52_vncData'
  securitySchemes:
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: /
          scopes: {}
          tokenUrl: /
      type: oauth2
